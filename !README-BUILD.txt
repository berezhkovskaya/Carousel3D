
  Linderdaum Engine building tutorial
=======================================

This tutorial will explain to you how to build Linderdaum Engine.


1. Prerequisites
------------------

You will require OpenAL to run Linderdaum and Python 3.x installed to 
build Linderdaum. Refer to their download pages
(http://connect.creativelabs.com/openal/Downloads/oalinst.zip
and http://www.python.org/download/) to get binary packages.

Linderdaum for Win32/Win64 comes with precompiled dependencies. You can 
find them in Libs.Win32 and Libs.Win64 folders. All your other additional 
.lib and manualy (lazy) loaded .dll files should be placed in these 
per-platform folders.

Additionaly Doxygen http://doxygen.org can be used to regenerate 
documentation pages for the project. 

If you are going to build Linderdaum under Windows using GCC we recommend
you to use the latest Equation GCC compiler (4.7) from 
http://www.equation.com/servlet/equation.cmd?fa=fortran


2. Preparing the build environment
------------------------------------

All necessary build directories will be created after successful checkout.
Use supplied .py build scripts to prepare configurations for different IDEs
and toolchains as described in the following sections.


3. Regenerating metainformation
---------------------------------

Linderdaum Engine has a reflection system based on C++ sources preprocessing.
A special tool LinderScript Database Compiler (LSDC) is responsible for
generation of all metainformation. Autogenerated files are not included into
the repository so you need to regenerate them yourself after every checkout
or update. Use 'rebuildLSD.py' script to regenerate metainformation. If you 
intend to generate metainformation for your own Linderdaum-based project 
add a file ProjectSetup.h to it.
	Note that LDSC setup for custom projects is intended for expert developers. 
It is far from fool proof, and you need to have a very good understanding of 
how our reflection and persistence system works in order to use this program
with your own applications. 


4. Preparing configuration files
----------------------------------

To prepare configuration files for VisualStudio or GCC simply run
'makeconfig.py' script. Besides .vcproj/.vcxproj files it will also generate 
all necessary makefiles for your GNU compiler.


5. Building
-------------

For VisualSudio:
   Run either 'LinderdaumSDK_VS2008.sln' or 'LinderdaumSDK_VS2010.sln' according 
to your VisualStudio version.

For GCC:
   Run 'build.py' or if you want to build Linderdaum from a clean checkout 
   simply run 'build_all.py' and it will do all the work for you.


6. Feedback
-------------

Please, report all bugs and your feedback 
to Linderdaum Engine forums at: http://www.linderdaum.com
