/**
 * \file ExpReg_Core6.cpp
 * \brief Autogenerated via LinderScript Database Compiler 0.9.24
 * \version 0.6.06
 * \date 16/01/2012
 * \author Sergey Kosarevsky, 2005-2011
 * \author Viktor Latypov, 2007-2011
 * \author support@linderdaum.com http://www.linderdaum.com
 */

#include "Generated/MethodBind.h"

#include "Core/Linker.h"
#include "Core/RTTI/iStaticClass.h"
#include "Core/RTTI/FieldBinding.h"
#include "Core/RTTI/PropertyMacros.h"

#include "Core/VFS/ML.h"

// Custom include file
#include "Generated/CoreExport_Includes.h"

#define REG_CLS_MTD(ClsName, MtdName) \
StaticClass->RegisterMethod( BindNativeMethod( & ClsName :: MtdName, #MtdName ) );
         // Class: iIntrusiveCounter
         // Class: iObject
         // Class: clVisualObject
         // Class: clVisualProjector
         // Class: clVisualLight
         // Class: clVisualSpotLight
// SCALAR_PROPERTY_LOAD__SETTER
// SpotCosCutoff
// ""
// clVisualSpotLight
// SetSpotCosCutoff
// LStr::ToFloat

bool LoadScalarField_clVisualSpotLight_SpotCosCutoff_SETTER(mlNode* Node, iObject* Obj) 
{
   (dynamic_cast<clVisualSpotLight*>(Obj))->SetSpotCosCutoff(LStr::ToFloat( Node->getValue() ) );
   return true; 
}

// SCALAR_PROPERTY_SAVE__GETTER
// SpotCosCutoff
// ""
// clVisualSpotLight
// GetSpotCosCutoff
// LStr::ToStrEpsilon

bool SaveScalarField_clVisualSpotLight_SpotCosCutoff_GETTER(iObject* Obj, mlNode** Result)   
{  
   LString Value =LStr::ToStrEpsilon(dynamic_cast<clVisualSpotLight*>(Obj)->GetSpotCosCutoff() ); 
   *Result = new mlNode("SpotCosCutoff" , Value ); 
   /* *Result->setValue( Value ); */   
   return true; 
}


// SCALAR_PROPERTY_LOAD__SETTER
// SpotExponent
// ""
// clVisualSpotLight
// SetSpotExponent
// LStr::ToFloat

bool LoadScalarField_clVisualSpotLight_SpotExponent_SETTER(mlNode* Node, iObject* Obj) 
{
   (dynamic_cast<clVisualSpotLight*>(Obj))->SetSpotExponent(LStr::ToFloat( Node->getValue() ) );
   return true; 
}

// SCALAR_PROPERTY_SAVE__GETTER
// SpotExponent
// ""
// clVisualSpotLight
// GetSpotExponent
// LStr::ToStrEpsilon

bool SaveScalarField_clVisualSpotLight_SpotExponent_GETTER(iObject* Obj, mlNode** Result)   
{  
   LString Value =LStr::ToStrEpsilon(dynamic_cast<clVisualSpotLight*>(Obj)->GetSpotExponent() ); 
   *Result = new mlNode("SpotExponent" , Value ); 
   /* *Result->setValue( Value ); */   
   return true; 
}




void RegisterPackageLinderdaumCoreClass255(sEnvironment* Env)
{
   iStaticClass* StaticClass = new clNativeStaticClass<clVisualSpotLight>;

   StaticClass->Env = Env;

#if !defined(_DISABLE_METHODS_)
   #define _RM__(Mtd) REG_CLS_MTD(clVisualSpotLight,Mtd)
   _RM__(AddToScene)
   _RM__(RemoveFromScene)
   _RM__(SyncWithScene)
   _RM__(GetDebugMeshName)
   _RM__(GetSpotCosCutoff)
   _RM__(GetSpotExponent)
   _RM__(SetSpotCosCutoff)
   _RM__(SetSpotExponent)
   #undef _RM__
#endif // _DISABLE_METHODS_
   REGISTER_PROPERTY__SCALAR_GETTER_SETTER(SpotCosCutoff, clVisualSpotLight, SpotCosCutoff)

   REGISTER_PROPERTY__SCALAR_GETTER_SETTER(SpotExponent, clVisualSpotLight, SpotExponent)

   StaticClass->SetSuperClassName( "clVisualLight" );

   Env->Linker->RegisterStaticClass( StaticClass );
}
         // Class: iIntrusiveCounter
         // Class: iObject
         // Class: clVisualObject
         // Class: clVisualRenderable
         // Class: clVisualVolume

void RegisterPackageLinderdaumCoreClass256(sEnvironment* Env)
{
   iStaticClass* StaticClass = new clNativeStaticClass<clVisualVolume>;

   StaticClass->Env = Env;

#if !defined(_DISABLE_METHODS_)
#endif // _DISABLE_METHODS_
   StaticClass->SetSuperClassName( "clVisualRenderable" );

   Env->Linker->RegisterStaticClass( StaticClass );
}

#include "Linderdaum/Audio/OGG.h"
         // Class: iIntrusiveCounter
         // Class: iObject
         // Class: iWaveDataProvider
            // Adding abstract: Clone
            // Adding abstract: IsStreaming
            // Adding abstract: IsEOF
            // Adding abstract: GetWaveDataFormat
            // Adding abstract: GetWaveData
            // Adding abstract: GetWaveDataSize
            // Adding abstract: StreamWaveData
            // Adding abstract: Seek
         // Class: clWaveDataProvider_OGG
            // Overriding abstract: Clone
            // Overriding abstract: IsStreaming
            // Overriding abstract: IsEOF
            // Overriding abstract: GetWaveDataFormat
            // Overriding abstract: GetWaveData
            // Overriding abstract: GetWaveDataSize
            // Overriding abstract: StreamWaveData
            // Overriding abstract: Seek

void RegisterPackageLinderdaumCoreClass257(sEnvironment* Env)
{
   iStaticClass* StaticClass = new clNativeStaticClass2<clWaveDataProvider_OGG, sEnvironment*, iIStream*>;

   StaticClass->Env = Env;

#if !defined(_DISABLE_METHODS_)
   #define _RM__(Mtd) REG_CLS_MTD(clWaveDataProvider_OGG,Mtd)
   _RM__(ShutdownOGG)
   _RM__(Clone)
   _RM__(IsStreaming)
   _RM__(IsEOF)
   _RM__(GetWaveDataFormat)
   _RM__(GetWaveData)
   _RM__(GetWaveDataSize)
   _RM__(StreamWaveData)
   _RM__(Seek)
   #undef _RM__
#endif // _DISABLE_METHODS_
   StaticClass->SetSuperClassName( "iWaveDataProvider" );

   Env->Linker->RegisterStaticClass( StaticClass );
}

#include "Linderdaum/Audio/WAV.h"
         // Class: iIntrusiveCounter
         // Class: iObject
         // Class: iWaveDataProvider
            // Adding abstract: Clone
            // Adding abstract: IsStreaming
            // Adding abstract: IsEOF
            // Adding abstract: GetWaveDataFormat
            // Adding abstract: GetWaveData
            // Adding abstract: GetWaveDataSize
            // Adding abstract: StreamWaveData
            // Adding abstract: Seek
         // Class: clWaveDataProvider_WAV
            // Overriding abstract: Clone
            // Overriding abstract: IsStreaming
            // Overriding abstract: IsEOF
            // Overriding abstract: GetWaveDataFormat
            // Overriding abstract: GetWaveData
            // Overriding abstract: GetWaveDataSize
            // Overriding abstract: StreamWaveData
            // Overriding abstract: Seek

void RegisterPackageLinderdaumCoreClass258(sEnvironment* Env)
{
   iStaticClass* StaticClass = new clNativeStaticClass2<clWaveDataProvider_WAV, sEnvironment*, iIStream*>;

   StaticClass->Env = Env;

#if !defined(_DISABLE_METHODS_)
   #define _RM__(Mtd) REG_CLS_MTD(clWaveDataProvider_WAV,Mtd)
   _RM__(Clone)
   _RM__(IsStreaming)
   _RM__(IsEOF)
   _RM__(GetWaveDataFormat)
   _RM__(GetWaveData)
   _RM__(GetWaveDataSize)
   _RM__(StreamWaveData)
   _RM__(Seek)
   #undef _RM__
#endif // _DISABLE_METHODS_
   StaticClass->SetSuperClassName( "iWaveDataProvider" );

   Env->Linker->RegisterStaticClass( StaticClass );
}
         // Class: iIntrusiveCounter
         // Class: iObject
         // Class: clUVSurfaceGenerator
            // Adding abstract: R_and_dR
         // Class: clWhitneyUmbrella
            // Overriding abstract: R_and_dR

void RegisterPackageLinderdaumCoreClass259(sEnvironment* Env)
{
   iStaticClass* StaticClass = new clNativeStaticClass<clWhitneyUmbrella>;

   StaticClass->Env = Env;

#if !defined(_DISABLE_METHODS_)
   REG_CLS_MTD( clWhitneyUmbrella,R_and_dR )
#endif // _DISABLE_METHODS_
   StaticClass->SetSuperClassName( "clUVSurfaceGenerator" );

   Env->Linker->RegisterStaticClass( StaticClass );
}

#include "Linderdaum/World/World.h"
         // Class: iIntrusiveCounter
         // Class: iObject
         // Class: clWorld
// OBJECT_ARRAY_PROPERTY_LOAD__FIELD
// GlobalActorsList
// FGlobalActorsList
// clWorld
// iActor

bool LoadObjectItem_clWorld_FGlobalActorsList_FIELD(mlNode* Node, iObject* Obj, int i) 
{
   FIX_PARSER_DEFECT(RealNode, Node->children[i]) 
  iActor* Ptr = NULL; 
   bool Res = Obj->Env->Linker->LoadObject(RealNode, reinterpret_cast<iObject**>(&Ptr)); 
  clWorld* CastedObj = dynamic_cast<clWorld*>(Obj); 
   if ( Res ) CastedObj->FGlobalActorsList[i] = Ptr; 
   return Res; 
}

// OBJECT_ARRAY_PROPERTY_SAVE__FIELD
// GlobalActorsList
// FGlobalActorsList
// clWorld

bool SaveObjectItem_clWorld_FGlobalActorsList_FIELD(iObject* Obj, int i, mlNode** Result) 
{
   return (dynamic_cast<clWorld*>(Obj)->FGlobalActorsList[i])->Save(Result);
}


// ARRAY_PROPERTY_FUNCTIONS__FIELD
// FGlobalActorsList
// clWorld

   ARRAY_PROPERTY_RESIZE_FUNCTION__FIELD(FGlobalActorsList,clWorld) 
   ARRAY_PROPERTY_SIZE_FUNCTION__FIELD(FGlobalActorsList,clWorld) 
   ARRAY_PROPERTY_CLEAR_FUNCTION__FIELD(FGlobalActorsList,clWorld)


// ARRAY_PROPERTY_DELETE_FUNCTION__FIELD
// FGlobalActorsList
// clWorld

void DeleteFunction_clWorld_FGlobalActorsList_FIELD(iObject* Obj, int Resize) 
{ 
   int Size = SizeFunction_clWorld_FGlobalActorsList_FIELD(Obj); 
   for (int i = 0 ; i < Size ; i++) 
   { 
      dynamic_cast<clWorld*>(Obj)->FGlobalActorsList[i] ->DisposeObject(); 
   }
   dynamic_cast<clWorld*>(Obj)->FGlobalActorsList.clear(); 
}





void RegisterPackageLinderdaumCoreClass260(sEnvironment* Env)
{
   iStaticClass* StaticClass = new clNativeStaticClass<clWorld>;

   StaticClass->Env = Env;

#if !defined(_DISABLE_METHODS_)
   #define _RM__(Mtd) REG_CLS_MTD(clWorld,Mtd)
   _RM__(AfterConstruction)
   _RM__(LoadRenderingTechnique)
   _RM__(ReplaceRenderingTechnique)
   _RM__(GetRenderingTechnique)
   _RM__(BeginPlay)
   _RM__(GetScene)
   _RM__(AddActor)
   _RM__(RemoveActor)
   _RM__(FindActor)
   _RM__(GetTotalActors)
   _RM__(GetActor)
   _RM__(SetActor)
   _RM__(RegisterActor)
   _RM__(UnRegisterActor)
   _RM__(BroadcastEvent)
   _RM__(LoadWorld)
   _RM__(SaveWorld)
   #undef _RM__
#endif // _DISABLE_METHODS_
   REGISTER_PROPERTY__OBJECT_ARRAY_FIELD(FGlobalActorsList, clWorld, GlobalActorsList)

   StaticClass->SetSuperClassName( "iObject" );

   Env->Linker->RegisterStaticClass( StaticClass );
}

#include "iActor_Tunneller.h"

#include "Linderdaum/World/iActor.h"

void RegisterPackageLinderdaumCoreClass261(sEnvironment* Env)
{
#if !defined(_DISABLE_TUNNELLERS_)
   iStaticClass* StaticClass = new clNativeStaticClass<iActor_Tunneller>;

   StaticClass->Env = Env;

#if !defined(_DISABLE_METHODS_)
   #define _RM__(Mtd) REG_CLS_MTD(iActor,Mtd)
   _RM__(GetWorld)
   _RM__(GetScene)
   _RM__(LeaveWorld)
   _RM__(UpdateActor)
   _RM__(RenderOverlay)
   _RM__(IsUpdatedInPause)
   _RM__(IsPersistent)
   _RM__(GetOrder)
   _RM__(SetOrder)
   _RM__(SetTimeProfile)
   _RM__(GetTimeProfile)
   _RM__(Actor_EnteredWorld)
   _RM__(Actor_LeavedWorld)
   _RM__(Actor_PostBeginPlay)
   _RM__(Actor_SomeoneEnteredWorld)
   _RM__(Actor_SomeoneLeavedWorld)
   _RM__(Actor_Event)
   _RM__(SendEvent)
   _RM__(ReceiveSelfEvents)
   #undef _RM__
#endif // _DISABLE_METHODS_
   StaticClass->SetSuperClassName( "iObject" );

   Env->Linker->RegisterStaticClass( StaticClass );
#endif // _DISABLE_TUNNELLERS_
}
         // Class: iIntrusiveCounter
         // Class: iObject
         // Class: iActor
            // Adding abstract: UpdateActor
      // Abstract method: UpdateActor
// SCALAR_PROPERTY_LOAD__SETTER
// Order
// ""
// iActor
// SetOrder
// LStr::ToInt

bool LoadScalarField_iActor_Order_SETTER(mlNode* Node, iObject* Obj) 
{
   (dynamic_cast<iActor*>(Obj))->SetOrder(LStr::ToInt( Node->getValue() ) );
   return true; 
}

// SCALAR_PROPERTY_SAVE__GETTER
// Order
// ""
// iActor
// GetOrder
// LStr::ToStr

bool SaveScalarField_iActor_Order_GETTER(iObject* Obj, mlNode** Result)   
{  
   LString Value =LStr::ToStr(dynamic_cast<iActor*>(Obj)->GetOrder() ); 
   *Result = new mlNode("Order" , Value ); 
   /* *Result->setValue( Value ); */   
   return true; 
}




void RegisterPackageLinderdaumCoreClass262(sEnvironment* Env)
{
   iStaticClass* StaticClass = new clNativeAbstractStaticClass<iActor>;

   StaticClass->Env = Env;

#if !defined(_DISABLE_METHODS_)
   #define _RM__(Mtd) REG_CLS_MTD(iActor,Mtd)
   _RM__(GetWorld)
   _RM__(GetScene)
   _RM__(LeaveWorld)
   _RM__(UpdateActor)
   _RM__(RenderOverlay)
   _RM__(IsUpdatedInPause)
   _RM__(IsPersistent)
   _RM__(GetOrder)
   _RM__(SetOrder)
   _RM__(SetTimeProfile)
   _RM__(GetTimeProfile)
   _RM__(Actor_EnteredWorld)
   _RM__(Actor_LeavedWorld)
   _RM__(Actor_PostBeginPlay)
   _RM__(Actor_SomeoneEnteredWorld)
   _RM__(Actor_SomeoneLeavedWorld)
   _RM__(Actor_Event)
   _RM__(SendEvent)
   _RM__(ReceiveSelfEvents)
   #undef _RM__
#endif // _DISABLE_METHODS_
   REGISTER_PROPERTY__SCALAR_GETTER_SETTER(Order, iActor, Order)

   StaticClass->SetSuperClassName( "iObject" );

   Env->Linker->RegisterStaticClass( StaticClass );
}

#include "iApplet_Tunneller.h"

void RegisterPackageLinderdaumCoreClass263(sEnvironment* Env)
{
#if !defined(_DISABLE_TUNNELLERS_)
   iStaticClass* StaticClass = new clNativeStaticClass<iApplet_Tunneller>;

   StaticClass->Env = Env;

#if !defined(_DISABLE_METHODS_)
#endif // _DISABLE_METHODS_
   StaticClass->SetSuperClassName( "iObject" );

   Env->Linker->RegisterStaticClass( StaticClass );
#endif // _DISABLE_TUNNELLERS_
}
         // Class: iIntrusiveCounter
         // Class: iObject
         // Class: iApplet

void RegisterPackageLinderdaumCoreClass264(sEnvironment* Env)
{
   iStaticClass* StaticClass = new clNativeStaticClass<iApplet>;

   StaticClass->Env = Env;

#if !defined(_DISABLE_METHODS_)
#endif // _DISABLE_METHODS_
   StaticClass->SetSuperClassName( "iObject" );

   Env->Linker->RegisterStaticClass( StaticClass );
}
         // Class: iIntrusiveCounter
         // Class: iObject
         // Class: iAudioSource

void RegisterPackageLinderdaumCoreClass265(sEnvironment* Env)
{
   iStaticClass* StaticClass = new clNativeStaticClass<iAudioSource>;

   StaticClass->Env = Env;

#if !defined(_DISABLE_METHODS_)
   #define _RM__(Mtd) REG_CLS_MTD(iAudioSource,Mtd)
   _RM__(Play)
   _RM__(Stop)
   _RM__(Pause)
   _RM__(LoopSound)
   _RM__(IsPlaying)
   _RM__(Update)
   _RM__(SetPosition)
   _RM__(SetVelocity)
   _RM__(SetDirection)
   _RM__(SetFadeVolume)
   _RM__(GetFadeVolume)
   _RM__(SetVolume)
   _RM__(SetVolumeNoFade)
   _RM__(GetVolume)
   _RM__(SetPitch)
   _RM__(BindWaveform)
   _RM__(GetWaveform)
   #undef _RM__
#endif // _DISABLE_METHODS_
   StaticClass->SetSuperClassName( "iObject" );

   Env->Linker->RegisterStaticClass( StaticClass );
}
         // Class: iIntrusiveCounter
         // Class: iObject
         // Class: iAudioSubSystem

void RegisterPackageLinderdaumCoreClass266(sEnvironment* Env)
{
   iStaticClass* StaticClass = new clNativeStaticClass<iAudioSubSystem>;

   StaticClass->Env = Env;

#if !defined(_DISABLE_METHODS_)
   #define _RM__(Mtd) REG_CLS_MTD(iAudioSubSystem,Mtd)
   _RM__(AfterConstruction)
   _RM__(Announce)
   _RM__(Announce3D)
   _RM__(CreateWaveform)
   _RM__(CreateSourceFromFile)
   _RM__(CreateSource)
   _RM__(SetListenerPosition)
   _RM__(SetListenerVelocity)
   _RM__(SetListenerOrientation)
   _RM__(SetListenerVolume)
   _RM__(StopAll)
   _RM__(PauseAll)
   _RM__(ResumeAll)
   _RM__(ToggleAll)
   _RM__(IsActive)
   #undef _RM__
#endif // _DISABLE_METHODS_
   StaticClass->SetSuperClassName( "iObject" );

   Env->Linker->RegisterStaticClass( StaticClass );
}

#include "iCameraPositioner_Tunneller.h"

void RegisterPackageLinderdaumCoreClass267(sEnvironment* Env)
{
#if !defined(_DISABLE_TUNNELLERS_)
   iStaticClass* StaticClass = new clNativeStaticClass<iCameraPositioner_Tunneller>;

   StaticClass->Env = Env;

#if !defined(_DISABLE_METHODS_)
   #define _RM__(Mtd) REG_CLS_MTD(iCameraPositioner,Mtd)
   _RM__(Register)
   _RM__(Unregister)
   _RM__(Update)
   _RM__(HandleKey)
   _RM__(GetCurrentTransform)
   #undef _RM__
#endif // _DISABLE_METHODS_
   StaticClass->SetSuperClassName( "iObject" );

   Env->Linker->RegisterStaticClass( StaticClass );
#endif // _DISABLE_TUNNELLERS_
}
         // Class: iIntrusiveCounter
         // Class: iObject
         // Class: iCameraPositioner
            // Adding abstract: Update
      // Abstract method: Update

void RegisterPackageLinderdaumCoreClass268(sEnvironment* Env)
{
   iStaticClass* StaticClass = new clNativeAbstractStaticClass<iCameraPositioner>;

   StaticClass->Env = Env;

#if !defined(_DISABLE_METHODS_)
   #define _RM__(Mtd) REG_CLS_MTD(iCameraPositioner,Mtd)
   _RM__(Register)
   _RM__(Unregister)
   _RM__(Update)
   _RM__(HandleKey)
   _RM__(GetCurrentTransform)
   #undef _RM__
#endif // _DISABLE_METHODS_
   StaticClass->SetSuperClassName( "iObject" );

   Env->Linker->RegisterStaticClass( StaticClass );
}

#include "Linderdaum/Core/RTTI/Field.h"
         // Class: iIntrusiveCounter
         // Class: iObject
         // Class: iField
            // Adding abstract: GetFieldPtr
            // Adding abstract: GetFieldSize
      // Abstract method: GetFieldPtr
      // Abstract method: GetFieldSize
// SCALAR_PROPERTY_LOAD__SETTER
// FieldName
// ""
// iField
// SetFieldName
// EMPTY_CONVERTER

bool LoadScalarField_iField_FieldName_SETTER(mlNode* Node, iObject* Obj) 
{
   (dynamic_cast<iField*>(Obj))->SetFieldName(EMPTY_CONVERTER( Node->getValue() ) );
   return true; 
}

// SCALAR_PROPERTY_SAVE__GETTER
// FieldName
// ""
// iField
// GetFieldName
// EMPTY_CONVERTER

bool SaveScalarField_iField_FieldName_GETTER(iObject* Obj, mlNode** Result)   
{  
   LString Value =EMPTY_CONVERTER(dynamic_cast<iField*>(Obj)->GetFieldName() ); 
   *Result = new mlNode("FieldName" , Value ); 
   /* *Result->setValue( Value ); */   
   return true; 
}


// SCALAR_PROPERTY_LOAD__SETTER
// FieldSize
// ""
// iField
// SetFieldSize
// LStr::ToInt

bool LoadScalarField_iField_FieldSize_SETTER(mlNode* Node, iObject* Obj) 
{
   (dynamic_cast<iField*>(Obj))->SetFieldSize(LStr::ToInt( Node->getValue() ) );
   return true; 
}

// SCALAR_PROPERTY_SAVE__GETTER
// FieldSize
// ""
// iField
// GetFieldSize
// LStr::ToStr

bool SaveScalarField_iField_FieldSize_GETTER(iObject* Obj, mlNode** Result)   
{  
   LString Value =LStr::ToStr(dynamic_cast<iField*>(Obj)->GetFieldSize() ); 
   *Result = new mlNode("FieldSize" , Value ); 
   /* *Result->setValue( Value ); */   
   return true; 
}




void RegisterPackageLinderdaumCoreClass269(sEnvironment* Env)
{
   iStaticClass* StaticClass = new clNativeAbstractStaticClass<iField>;

   StaticClass->Env = Env;

#if !defined(_DISABLE_METHODS_)
   #define _RM__(Mtd) REG_CLS_MTD(iField,Mtd)
   _RM__(GetFieldPtr)
   _RM__(GetFieldSize)
   _RM__(Resize)
   _RM__(GetFieldName)
   _RM__(SetFieldName)
   _RM__(SetFieldSize)
   #undef _RM__
#endif // _DISABLE_METHODS_
   REGISTER_PROPERTY__SCALAR_GETTER_SETTER(FieldName, iField, FieldName)

   REGISTER_PROPERTY__SCALAR_GETTER_SETTER(FieldSize, iField, FieldSize)

   StaticClass->SetSuperClassName( "iObject" );

   Env->Linker->RegisterStaticClass( StaticClass );
}
         // Class: iIntrusiveCounter
         // Class: iObject
         // Class: iFontProperties
            // Adding abstract: IsFixedFont
      // Abstract method: IsFixedFont

void RegisterPackageLinderdaumCoreClass270(sEnvironment* Env)
{
   iStaticClass* StaticClass = new clNativeAbstractStaticClass<iFontProperties>;

   StaticClass->Env = Env;

#if !defined(_DISABLE_METHODS_)
   REG_CLS_MTD( iFontProperties,IsFixedFont )
   REG_CLS_MTD( iFontProperties,GetFontShader )
#endif // _DISABLE_METHODS_
   StaticClass->SetSuperClassName( "iObject" );

   Env->Linker->RegisterStaticClass( StaticClass );
}

#include "Linderdaum/Renderer/iGPGPUContext.h"
         // Class: iIntrusiveCounter
         // Class: iObject
         // Class: iGPGPUContext
            // Adding abstract: InitContext
            // Adding abstract: CheckError
      // Abstract method: InitContext
      // Abstract method: CheckError

void RegisterPackageLinderdaumCoreClass271(sEnvironment* Env)
{
   iStaticClass* StaticClass = new clNativeAbstractStaticClass<iGPGPUContext>;

   StaticClass->Env = Env;

#if !defined(_DISABLE_METHODS_)
   REG_CLS_MTD( iGPGPUContext,InitContext )
   REG_CLS_MTD( iGPGPUContext,CheckError )
#endif // _DISABLE_METHODS_
   StaticClass->SetSuperClassName( "iObject" );

   Env->Linker->RegisterStaticClass( StaticClass );
}

#include "Linderdaum/Renderer/iGPUBuffer.h"
         // Class: iIntrusiveCounter
         // Class: iObject
         // Class: iGPUBuffer
            // Adding abstract: CreateBuffer
            // Adding abstract: ReadBuffer
            // Adding abstract: BufferData
            // Adding abstract: BufferSubData
      // Abstract method: CreateBuffer
      // Abstract method: ReadBuffer
      // Abstract method: BufferData
      // Abstract method: BufferSubData

void RegisterPackageLinderdaumCoreClass272(sEnvironment* Env)
{
   iStaticClass* StaticClass = new clNativeAbstractStaticClass<iGPUBuffer>;

   StaticClass->Env = Env;

#if !defined(_DISABLE_METHODS_)
   #define _RM__(Mtd) REG_CLS_MTD(iGPUBuffer,Mtd)
   _RM__(CreateBuffer)
   _RM__(ReadBuffer)
   _RM__(BufferData)
   _RM__(BufferSubData)
   _RM__(BindAsUniformBuffer)
   #undef _RM__
#endif // _DISABLE_METHODS_
   StaticClass->SetSuperClassName( "iObject" );

   Env->Linker->RegisterStaticClass( StaticClass );
}

#include "Linderdaum/GUI/ComCtl/I_Button.h"
         // Class: iIntrusiveCounter
         // Class: iObject
         // Class: iGestureResponder
         // Class: iGUIResponder
         // Class: iGUIRegion
         // Class: iGUIViewRenderer
         // Class: iGUIView
         // Class: clGUIPanel
         // Class: iGUIButton

void RegisterPackageLinderdaumCoreClass273(sEnvironment* Env)
{
   iStaticClass* StaticClass = new clNativeStaticClass<iGUIButton>;

   StaticClass->Env = Env;

#if !defined(_DISABLE_METHODS_)
   #define _RM__(Mtd) REG_CLS_MTD(iGUIButton,Mtd)
   _RM__(ContainsCaption)
   _RM__(ContainsResizeCorner)
   _RM__(ContainsCloseButton)
   _RM__(Event_Registered)
   _RM__(Event_LDoubleClick)
   #undef _RM__
#endif // _DISABLE_METHODS_
   StaticClass->SetSuperClassName( "clGUIPanel" );

   Env->Linker->RegisterStaticClass( StaticClass );
}

#include "Linderdaum/GUI/ComCtl/I_Checkable.h"
         // Class: iIntrusiveCounter
         // Class: iObject
         // Class: iGestureResponder
         // Class: iGUIResponder
         // Class: iGUIRegion
         // Class: iGUIViewRenderer
         // Class: iGUIView
         // Class: clGUIPanel
         // Class: iGUIButton
         // Class: iGUICheckable
// SCALAR_PROPERTY_LOAD__FIELD
// HDelta1
// FHDelta1
// iGUICheckable
// FHDelta1
// LStr::ToFloat

bool LoadScalarField_iGUICheckable_FHDelta1_FIELD(mlNode* Node, iObject* Obj) 
{
   (dynamic_cast<iGUICheckable*>(Obj))->FHDelta1=LStr::ToFloat( Node->getValue() );
   return true; 
}

// SCALAR_PROPERTY_SAVE__FIELD
// HDelta1
// FHDelta1
// iGUICheckable
// FHDelta1
// LStr::ToStrEpsilon

bool SaveScalarField_iGUICheckable_FHDelta1_FIELD(iObject* Obj, mlNode** Result) 
{  
   LString Value =LStr::ToStrEpsilon(dynamic_cast<iGUICheckable*>(Obj)->FHDelta1); 
   *Result = new mlNode("HDelta1" , Value); 
   /* *Result->setValue( Value );*/   
   return true; 
}


// SCALAR_PROPERTY_LOAD__FIELD
// HDelta2
// FHDelta2
// iGUICheckable
// FHDelta2
// LStr::ToFloat

bool LoadScalarField_iGUICheckable_FHDelta2_FIELD(mlNode* Node, iObject* Obj) 
{
   (dynamic_cast<iGUICheckable*>(Obj))->FHDelta2=LStr::ToFloat( Node->getValue() );
   return true; 
}

// SCALAR_PROPERTY_SAVE__FIELD
// HDelta2
// FHDelta2
// iGUICheckable
// FHDelta2
// LStr::ToStrEpsilon

bool SaveScalarField_iGUICheckable_FHDelta2_FIELD(iObject* Obj, mlNode** Result) 
{  
   LString Value =LStr::ToStrEpsilon(dynamic_cast<iGUICheckable*>(Obj)->FHDelta2); 
   *Result = new mlNode("HDelta2" , Value); 
   /* *Result->setValue( Value );*/   
   return true; 
}


// SCALAR_PROPERTY_LOAD__SETTER
// BoxWidth
// ""
// iGUICheckable
// SetBoxWidth
// LStr::ToFloat

bool LoadScalarField_iGUICheckable_BoxWidth_SETTER(mlNode* Node, iObject* Obj) 
{
   (dynamic_cast<iGUICheckable*>(Obj))->SetBoxWidth(LStr::ToFloat( Node->getValue() ) );
   return true; 
}

// SCALAR_PROPERTY_SAVE__GETTER
// BoxWidth
// ""
// iGUICheckable
// GetBoxWidth
// LStr::ToStrEpsilon

bool SaveScalarField_iGUICheckable_BoxWidth_GETTER(iObject* Obj, mlNode** Result)   
{  
   LString Value =LStr::ToStrEpsilon(dynamic_cast<iGUICheckable*>(Obj)->GetBoxWidth() ); 
   *Result = new mlNode("BoxWidth" , Value ); 
   /* *Result->setValue( Value ); */   
   return true; 
}




void RegisterPackageLinderdaumCoreClass274(sEnvironment* Env)
{
   iStaticClass* StaticClass = new clNativeStaticClass<iGUICheckable>;

   StaticClass->Env = Env;

#if !defined(_DISABLE_METHODS_)
   #define _RM__(Mtd) REG_CLS_MTD(iGUICheckable,Mtd)
   _RM__(AfterConstruction)
   _RM__(GetUniformsVec)
   _RM__(PreRender)
   _RM__(Check)
   _RM__(UnCheck)
   _RM__(Toggle)
   _RM__(IsChecked)
   _RM__(SetCheckedShader)
   _RM__(SetCheckedShaderName)
   _RM__(GetCheckedShaderName)
   _RM__(SetUnCheckedShader)
   _RM__(SetUnCheckedShaderName)
   _RM__(GetUnCheckedShaderName)
   _RM__(SetBoxWidth)
   _RM__(GetBoxWidth)
   _RM__(Event_Timer)
   #undef _RM__
#endif // _DISABLE_METHODS_
   REGISTER_PROPERTY__SCALAR_FIELD(FHDelta1, iGUICheckable, HDelta1)

   REGISTER_PROPERTY__SCALAR_FIELD(FHDelta2, iGUICheckable, HDelta2)

   REGISTER_PROPERTY__SCALAR_GETTER_SETTER(BoxWidth, iGUICheckable, BoxWidth)

   StaticClass->SetSuperClassName( "iGUIButton" );

   Env->Linker->RegisterStaticClass( StaticClass );
}

#include "Linderdaum/GUI/iGUIRegion.h"
         // Class: iIntrusiveCounter
         // Class: iObject
         // Class: iGestureResponder
         // Class: iGUIResponder
         // Class: iGUIRegion
// SCALAR_PROPERTY_LOAD__SETTER
// Coords
// ""
// iGUIRegion
// ParseCoords
// EMPTY_CONVERTER

bool LoadScalarField_iGUIRegion_Coords_SETTER(mlNode* Node, iObject* Obj) 
{
   (dynamic_cast<iGUIRegion*>(Obj))->ParseCoords(EMPTY_CONVERTER( Node->getValue() ) );
   return true; 
}

// SCALAR_PROPERTY_SAVE__GETTER
// Coords
// ""
// iGUIRegion
// GetInitialCoords
// EMPTY_CONVERTER

bool SaveScalarField_iGUIRegion_Coords_GETTER(iObject* Obj, mlNode** Result)   
{  
   LString Value =EMPTY_CONVERTER(dynamic_cast<iGUIRegion*>(Obj)->GetInitialCoords() ); 
   *Result = new mlNode("Coords" , Value ); 
   /* *Result->setValue( Value ); */   
   return true; 
}


// SCALAR_PROPERTY_LOAD__SETTER
// CurrentCoords
// ""
// iGUIRegion
// SetCoordsV
// LStr::StrToVec4

bool LoadScalarField_iGUIRegion_CurrentCoords_SETTER(mlNode* Node, iObject* Obj) 
{
   (dynamic_cast<iGUIRegion*>(Obj))->SetCoordsV(LStr::StrToVec4( Node->getValue() ) );
   return true; 
}

// SCALAR_PROPERTY_SAVE__GETTER
// CurrentCoords
// ""
// iGUIRegion
// GetCoords
// LStr::Vec4ToStr

bool SaveScalarField_iGUIRegion_CurrentCoords_GETTER(iObject* Obj, mlNode** Result)   
{  
   LString Value =LStr::Vec4ToStr(dynamic_cast<iGUIRegion*>(Obj)->GetCoords() ); 
   *Result = new mlNode("CurrentCoords" , Value ); 
   /* *Result->setValue( Value ); */   
   return true; 
}


// SCALAR_PROPERTY_LOAD__SETTER
// Title
// ""
// iGUIRegion
// SetTitle
// EMPTY_CONVERTER

bool LoadScalarField_iGUIRegion_Title_SETTER(mlNode* Node, iObject* Obj) 
{
   (dynamic_cast<iGUIRegion*>(Obj))->SetTitle(EMPTY_CONVERTER( Node->getValue() ) );
   return true; 
}

// SCALAR_PROPERTY_SAVE__GETTER
// Title
// ""
// iGUIRegion
// GetTitle
// EMPTY_CONVERTER

bool SaveScalarField_iGUIRegion_Title_GETTER(iObject* Obj, mlNode** Result)   
{  
   LString Value =EMPTY_CONVERTER(dynamic_cast<iGUIRegion*>(Obj)->GetTitle() ); 
   *Result = new mlNode("Title" , Value ); 
   /* *Result->setValue( Value ); */   
   return true; 
}


// SCALAR_PROPERTY_LOAD__SETTER
// Opacity
// ""
// iGUIRegion
// SetOpacity
// LStr::ToFloat

bool LoadScalarField_iGUIRegion_Opacity_SETTER(mlNode* Node, iObject* Obj) 
{
   (dynamic_cast<iGUIRegion*>(Obj))->SetOpacity(LStr::ToFloat( Node->getValue() ) );
   return true; 
}

// SCALAR_PROPERTY_SAVE__GETTER
// Opacity
// ""
// iGUIRegion
// GetOpacity
// LStr::ToStrEpsilon

bool SaveScalarField_iGUIRegion_Opacity_GETTER(iObject* Obj, mlNode** Result)   
{  
   LString Value =LStr::ToStrEpsilon(dynamic_cast<iGUIRegion*>(Obj)->GetOpacity() ); 
   *Result = new mlNode("Opacity" , Value ); 
   /* *Result->setValue( Value ); */   
   return true; 
}


// SCALAR_PROPERTY_LOAD__SETTER
// TextOffsets
// ""
// iGUIRegion
// SetTextOffsets
// LStr::StrToVec4

bool LoadScalarField_iGUIRegion_TextOffsets_SETTER(mlNode* Node, iObject* Obj) 
{
   (dynamic_cast<iGUIRegion*>(Obj))->SetTextOffsets(LStr::StrToVec4( Node->getValue() ) );
   return true; 
}

// SCALAR_PROPERTY_SAVE__GETTER
// TextOffsets
// ""
// iGUIRegion
// GetTextOffsets
// LStr::Vec4ToStr

bool SaveScalarField_iGUIRegion_TextOffsets_GETTER(iObject* Obj, mlNode** Result)   
{  
   LString Value =LStr::Vec4ToStr(dynamic_cast<iGUIRegion*>(Obj)->GetTextOffsets() ); 
   *Result = new mlNode("TextOffsets" , Value ); 
   /* *Result->setValue( Value ); */   
   return true; 
}




void RegisterPackageLinderdaumCoreClass275(sEnvironment* Env)
{
   iStaticClass* StaticClass = new clNativeStaticClass<iGUIRegion>;

   StaticClass->Env = Env;

#if !defined(_DISABLE_METHODS_)
   #define _RM__(Mtd) REG_CLS_MTD(iGUIRegion,Mtd)
   _RM__(IsInLocalCoords)
   _RM__(GetLifeTime)
   _RM__(SetRegionState)
   _RM__(GetRegionState)
   _RM__(OutTextXY)
   _RM__(Screen2Local)
   _RM__(Local2Screen)
   _RM__(Contains)
   _RM__(ContainsCaption)
   _RM__(ContainsResizeCorner)
   _RM__(ContainsCloseButton)
   _RM__(MoveTo)
   _RM__(MoveRel)
   _RM__(SetSize)
   _RM__(CenterTextHorizontal)
   _RM__(CenterTextVertical)
   _RM__(GetMaximizedHeight)
   _RM__(SetMaximizedHeight)
   _RM__(GetWidth)
   _RM__(GetHeight)
   _RM__(GetX1)
   _RM__(GetY1)
   _RM__(GetX2)
   _RM__(GetY2)
   _RM__(GetUniformsVec)
   _RM__(UpdateUniforms)
   _RM__(UpdateUniformsV)
   _RM__(SetWidth)
   _RM__(SetHeight)
   _RM__(GetTitle)
   _RM__(SetTitle)
   _RM__(SetCoords)
   _RM__(SetCoordsV)
   _RM__(ParseCoords)
   _RM__(GetInitialCoords)
   _RM__(GetCoords)
   _RM__(SetOpacity)
   _RM__(GetOpacity)
   _RM__(SetTextOffsets)
   _RM__(GetTextOffsets)
   _RM__(GetFont)
   _RM__(Event_Timer)
   #undef _RM__
#endif // _DISABLE_METHODS_
   REGISTER_PROPERTY__SCALAR_GETTER_SETTER(Coords, iGUIRegion, Coords)

   REGISTER_PROPERTY__SCALAR_GETTER_SETTER(CurrentCoords, iGUIRegion, CurrentCoords)

   REGISTER_PROPERTY__SCALAR_GETTER_SETTER(Title, iGUIRegion, Title)

   REGISTER_PROPERTY__SCALAR_GETTER_SETTER(Opacity, iGUIRegion, Opacity)

   REGISTER_PROPERTY__SCALAR_GETTER_SETTER(TextOffsets, iGUIRegion, TextOffsets)

   StaticClass->SetSuperClassName( "iObject" );

   Env->Linker->RegisterStaticClass( StaticClass );
}

#include "Linderdaum/GUI/iGUIView.h"
         // Class: iIntrusiveCounter
         // Class: iObject
         // Class: iGestureResponder
         // Class: iGUIResponder
         // Class: iGUIRegion
         // Class: iGUIViewRenderer
         // Class: iGUIView
// SCALAR_PROPERTY_LOAD__SETTER
// OnTop
// ""
// iGUIView
// SetOnTopPriority
// LStr::ToInt

bool LoadScalarField_iGUIView_OnTop_SETTER(mlNode* Node, iObject* Obj) 
{
   (dynamic_cast<iGUIView*>(Obj))->SetOnTopPriority(LStr::ToInt( Node->getValue() ) );
   return true; 
}

// SCALAR_PROPERTY_SAVE__GETTER
// OnTop
// ""
// iGUIView
// GetOnTopPriority
// LStr::ToStr

bool SaveScalarField_iGUIView_OnTop_GETTER(iObject* Obj, mlNode** Result)   
{  
   LString Value =LStr::ToStr(dynamic_cast<iGUIView*>(Obj)->GetOnTopPriority() ); 
   *Result = new mlNode("OnTop" , Value ); 
   /* *Result->setValue( Value ); */   
   return true; 
}


// SCALAR_PROPERTY_LOAD__SETTER
// BindConsoleCommand
// ""
// iGUIView
// BindConsoleCommandS
// EMPTY_CONVERTER

bool LoadScalarField_iGUIView_BindConsoleCommand_SETTER(mlNode* Node, iObject* Obj) 
{
   (dynamic_cast<iGUIView*>(Obj))->BindConsoleCommandS(EMPTY_CONVERTER( Node->getValue() ) );
   return true; 
}

// SCALAR_PROPERTY_SAVE__GETTER
// BindConsoleCommand
// ""
// iGUIView
// GetConsoleCommand
// EMPTY_CONVERTER

bool SaveScalarField_iGUIView_BindConsoleCommand_GETTER(iObject* Obj, mlNode** Result)   
{  
   LString Value =EMPTY_CONVERTER(dynamic_cast<iGUIView*>(Obj)->GetConsoleCommand() ); 
   *Result = new mlNode("BindConsoleCommand" , Value ); 
   /* *Result->setValue( Value ); */   
   return true; 
}


// SCALAR_PROPERTY_LOAD__SETTER
// BindConsoleCommandFadeIn
// ""
// iGUIView
// BindConsoleCommandFadeInS
// EMPTY_CONVERTER

bool LoadScalarField_iGUIView_BindConsoleCommandFadeIn_SETTER(mlNode* Node, iObject* Obj) 
{
   (dynamic_cast<iGUIView*>(Obj))->BindConsoleCommandFadeInS(EMPTY_CONVERTER( Node->getValue() ) );
   return true; 
}

// SCALAR_PROPERTY_SAVE__GETTER
// BindConsoleCommandFadeIn
// ""
// iGUIView
// GetConsoleCommandFadeIn
// EMPTY_CONVERTER

bool SaveScalarField_iGUIView_BindConsoleCommandFadeIn_GETTER(iObject* Obj, mlNode** Result)   
{  
   LString Value =EMPTY_CONVERTER(dynamic_cast<iGUIView*>(Obj)->GetConsoleCommandFadeIn() ); 
   *Result = new mlNode("BindConsoleCommandFadeIn" , Value ); 
   /* *Result->setValue( Value ); */   
   return true; 
}


// SCALAR_PROPERTY_LOAD__SETTER
// BindConsoleVariable
// ""
// iGUIView
// BindConsoleVariableS
// EMPTY_CONVERTER

bool LoadScalarField_iGUIView_BindConsoleVariable_SETTER(mlNode* Node, iObject* Obj) 
{
   (dynamic_cast<iGUIView*>(Obj))->BindConsoleVariableS(EMPTY_CONVERTER( Node->getValue() ) );
   return true; 
}

// SCALAR_PROPERTY_SAVE__GETTER
// BindConsoleVariable
// ""
// iGUIView
// GetConsoleVariableName
// EMPTY_CONVERTER

bool SaveScalarField_iGUIView_BindConsoleVariable_GETTER(iObject* Obj, mlNode** Result)   
{  
   LString Value =EMPTY_CONVERTER(dynamic_cast<iGUIView*>(Obj)->GetConsoleVariableName() ); 
   *Result = new mlNode("BindConsoleVariable" , Value ); 
   /* *Result->setValue( Value ); */   
   return true; 
}


// SCALAR_PROPERTY_LOAD__SETTER
// Visible
// ""
// iGUIView
// SetVisible
// LStr::ToBool

bool LoadScalarField_iGUIView_Visible_SETTER(mlNode* Node, iObject* Obj) 
{
   (dynamic_cast<iGUIView*>(Obj))->SetVisible(LStr::ToBool( Node->getValue() ) );
   return true; 
}

// SCALAR_PROPERTY_SAVE__GETTER
// Visible
// ""
// iGUIView
// IsVisible
// LStr::ToStr_Bool

bool SaveScalarField_iGUIView_Visible_GETTER(iObject* Obj, mlNode** Result)   
{  
   LString Value =LStr::ToStr_Bool(dynamic_cast<iGUIView*>(Obj)->IsVisible() ); 
   *Result = new mlNode("Visible" , Value ); 
   /* *Result->setValue( Value ); */   
   return true; 
}


// SCALAR_PROPERTY_LOAD__SETTER
// Interactive
// ""
// iGUIView
// SetInteractive
// LStr::ToBool

bool LoadScalarField_iGUIView_Interactive_SETTER(mlNode* Node, iObject* Obj) 
{
   (dynamic_cast<iGUIView*>(Obj))->SetInteractive(LStr::ToBool( Node->getValue() ) );
   return true; 
}

// SCALAR_PROPERTY_SAVE__GETTER
// Interactive
// ""
// iGUIView
// IsInteractive
// LStr::ToStr_Bool

bool SaveScalarField_iGUIView_Interactive_GETTER(iObject* Obj, mlNode** Result)   
{  
   LString Value =LStr::ToStr_Bool(dynamic_cast<iGUIView*>(Obj)->IsInteractive() ); 
   *Result = new mlNode("Interactive" , Value ); 
   /* *Result->setValue( Value ); */   
   return true; 
}


// SCALAR_PROPERTY_LOAD__SETTER
// ToolTip
// ""
// iGUIView
// SetToolTipText
// EMPTY_CONVERTER

bool LoadScalarField_iGUIView_ToolTip_SETTER(mlNode* Node, iObject* Obj) 
{
   (dynamic_cast<iGUIView*>(Obj))->SetToolTipText(EMPTY_CONVERTER( Node->getValue() ) );
   return true; 
}

// SCALAR_PROPERTY_SAVE__GETTER
// ToolTip
// ""
// iGUIView
// GetToolTipText
// EMPTY_CONVERTER

bool SaveScalarField_iGUIView_ToolTip_GETTER(iObject* Obj, mlNode** Result)   
{  
   LString Value =EMPTY_CONVERTER(dynamic_cast<iGUIView*>(Obj)->GetToolTipText() ); 
   *Result = new mlNode("ToolTip" , Value ); 
   /* *Result->setValue( Value ); */   
   return true; 
}


// SCALAR_PROPERTY_LOAD__SETTER
// ToolTipTime
// ""
// iGUIView
// SetToolTipTime
// LStr::ToFloat

bool LoadScalarField_iGUIView_ToolTipTime_SETTER(mlNode* Node, iObject* Obj) 
{
   (dynamic_cast<iGUIView*>(Obj))->SetToolTipTime(LStr::ToFloat( Node->getValue() ) );
   return true; 
}

// SCALAR_PROPERTY_SAVE__GETTER
// ToolTipTime
// ""
// iGUIView
// GetToolTipTime
// LStr::ToStrEpsilon

bool SaveScalarField_iGUIView_ToolTipTime_GETTER(iObject* Obj, mlNode** Result)   
{  
   LString Value =LStr::ToStrEpsilon(dynamic_cast<iGUIView*>(Obj)->GetToolTipTime() ); 
   *Result = new mlNode("ToolTipTime" , Value ); 
   /* *Result->setValue( Value ); */   
   return true; 
}


// SCALAR_PROPERTY_LOAD__SETTER
// Color
// ""
// iGUIView
// SetDefaultColor
// LStr::StrToVec4

bool LoadScalarField_iGUIView_Color_SETTER(mlNode* Node, iObject* Obj) 
{
   (dynamic_cast<iGUIView*>(Obj))->SetDefaultColor(LStr::StrToVec4( Node->getValue() ) );
   return true; 
}

// SCALAR_PROPERTY_SAVE__GETTER
// Color
// ""
// iGUIView
// GetDefaultColor
// LStr::Vec4ToStr

bool SaveScalarField_iGUIView_Color_GETTER(iObject* Obj, mlNode** Result)   
{  
   LString Value =LStr::Vec4ToStr(dynamic_cast<iGUIView*>(Obj)->GetDefaultColor() ); 
   *Result = new mlNode("Color" , Value ); 
   /* *Result->setValue( Value ); */   
   return true; 
}


// SCALAR_PROPERTY_LOAD__SETTER
// ColorHex
// ""
// iGUIView
// SetDefaultColorHex
// EMPTY_CONVERTER

bool LoadScalarField_iGUIView_ColorHex_SETTER(mlNode* Node, iObject* Obj) 
{
   (dynamic_cast<iGUIView*>(Obj))->SetDefaultColorHex(EMPTY_CONVERTER( Node->getValue() ) );
   return true; 
}

// SCALAR_PROPERTY_SAVE__GETTER
// ColorHex
// ""
// iGUIView
// GetDefaultColorHex
// EMPTY_CONVERTER

bool SaveScalarField_iGUIView_ColorHex_GETTER(iObject* Obj, mlNode** Result)   
{  
   LString Value =EMPTY_CONVERTER(dynamic_cast<iGUIView*>(Obj)->GetDefaultColorHex() ); 
   *Result = new mlNode("ColorHex" , Value ); 
   /* *Result->setValue( Value ); */   
   return true; 
}


// SCALAR_ARRAY_PROPERTY_LOAD__FIELD
// ConsoleCommand
// FCommandsStack
// iGUIView
// EMPTY_CONVERTER

bool LoadScalarItem_iGUIView_FCommandsStack_FIELD(mlNode* Node, iObject* Obj, int i)
{ 
   FIX_PARSER_DEFECT(RealNode, Node->children[i]) 
/* dynamic_cast<iGUIView*>(Obj)-> TheArrayName [i] = (EMPTY_CONVERTER( RealNode->getValue() ) );*/
   LString LocalValue = RealNode->getValue();
   LString RealValue;
   if ( LocalValue.empty() )
   {
      RealValue = RealNode->getID(); 
   }
   else
   {
      RealValue = RealNode->getID() + LString(" ") + LocalValue; 
   }
   dynamic_cast<iGUIView*>(Obj)->FCommandsStack[i] = (EMPTY_CONVERTER( RealValue ) );
   return true; 
}

// SCALAR_ARRAY_PROPERTY_SAVE__FIELD
// ConsoleCommand
// FCommandsStack
// iGUIView
// EMPTY_CONVERTER

bool SaveScalarItem_iGUIView_FCommandsStack_FIELD(iObject* Obj, int i, mlNode** Result) 
{  
   LString Value =EMPTY_CONVERTER(dynamic_cast<iGUIView*>(Obj)->FCommandsStack[i]);   
/* mlNode* Res = new mlNode(#TheArrayName , Value); */ 
   *Result = new mlNode("", Value); 
   return true; 
}


// ARRAY_PROPERTY_FUNCTIONS__FIELD
// FCommandsStack
// iGUIView

   ARRAY_PROPERTY_RESIZE_FUNCTION__FIELD(FCommandsStack,iGUIView) 
   ARRAY_PROPERTY_SIZE_FUNCTION__FIELD(FCommandsStack,iGUIView) 
   ARRAY_PROPERTY_CLEAR_FUNCTION__FIELD(FCommandsStack,iGUIView)



// SCALAR_ARRAY_PROPERTY_LOAD__FIELD
// ConsoleCommandFadeIn
// FCommandsStackFadeIn
// iGUIView
// EMPTY_CONVERTER

bool LoadScalarItem_iGUIView_FCommandsStackFadeIn_FIELD(mlNode* Node, iObject* Obj, int i)
{ 
   FIX_PARSER_DEFECT(RealNode, Node->children[i]) 
/* dynamic_cast<iGUIView*>(Obj)-> TheArrayName [i] = (EMPTY_CONVERTER( RealNode->getValue() ) );*/
   LString LocalValue = RealNode->getValue();
   LString RealValue;
   if ( LocalValue.empty() )
   {
      RealValue = RealNode->getID(); 
   }
   else
   {
      RealValue = RealNode->getID() + LString(" ") + LocalValue; 
   }
   dynamic_cast<iGUIView*>(Obj)->FCommandsStackFadeIn[i] = (EMPTY_CONVERTER( RealValue ) );
   return true; 
}

// SCALAR_ARRAY_PROPERTY_SAVE__FIELD
// ConsoleCommandFadeIn
// FCommandsStackFadeIn
// iGUIView
// EMPTY_CONVERTER

bool SaveScalarItem_iGUIView_FCommandsStackFadeIn_FIELD(iObject* Obj, int i, mlNode** Result) 
{  
   LString Value =EMPTY_CONVERTER(dynamic_cast<iGUIView*>(Obj)->FCommandsStackFadeIn[i]);   
/* mlNode* Res = new mlNode(#TheArrayName , Value); */ 
   *Result = new mlNode("", Value); 
   return true; 
}


// ARRAY_PROPERTY_FUNCTIONS__FIELD
// FCommandsStackFadeIn
// iGUIView

   ARRAY_PROPERTY_RESIZE_FUNCTION__FIELD(FCommandsStackFadeIn,iGUIView) 
   ARRAY_PROPERTY_SIZE_FUNCTION__FIELD(FCommandsStackFadeIn,iGUIView) 
   ARRAY_PROPERTY_CLEAR_FUNCTION__FIELD(FCommandsStackFadeIn,iGUIView)



// OBJECT_ARRAY_PROPERTY_LOAD__FIELD
// ChildViews
// FChildViews
// iGUIView
// iGUIView

bool LoadObjectItem_iGUIView_FChildViews_FIELD(mlNode* Node, iObject* Obj, int i) 
{
   FIX_PARSER_DEFECT(RealNode, Node->children[i]) 
  iGUIView* Ptr = NULL; 
   bool Res = Obj->Env->Linker->LoadObject(RealNode, reinterpret_cast<iObject**>(&Ptr)); 
  iGUIView* CastedObj = dynamic_cast<iGUIView*>(Obj); 
   if ( Res ) CastedObj->FChildViews[i] = Ptr; 
   return Res; 
}

// OBJECT_ARRAY_PROPERTY_SAVE__FIELD
// ChildViews
// FChildViews
// iGUIView

bool SaveObjectItem_iGUIView_FChildViews_FIELD(iObject* Obj, int i, mlNode** Result) 
{
   return (dynamic_cast<iGUIView*>(Obj)->FChildViews[i])->Save(Result);
}


// ARRAY_PROPERTY_FUNCTIONS__FIELD
// FChildViews
// iGUIView

   ARRAY_PROPERTY_RESIZE_FUNCTION__FIELD(FChildViews,iGUIView) 
   ARRAY_PROPERTY_SIZE_FUNCTION__FIELD(FChildViews,iGUIView) 
   ARRAY_PROPERTY_CLEAR_FUNCTION__FIELD(FChildViews,iGUIView)


// ARRAY_PROPERTY_DELETE_FUNCTION__FIELD
// FChildViews
// iGUIView

void DeleteFunction_iGUIView_FChildViews_FIELD(iObject* Obj, int Resize) 
{ 
   int Size = SizeFunction_iGUIView_FChildViews_FIELD(Obj); 
   for (int i = 0 ; i < Size ; i++) 
   { 
      dynamic_cast<iGUIView*>(Obj)->FChildViews[i] ->DisposeObject(); 
   }
   dynamic_cast<iGUIView*>(Obj)->FChildViews.clear(); 
}



// SCALAR_PROPERTY_LOAD__FIELD
// MinimalOpacity
// FMinimalOpacity
// iGUIView
// FMinimalOpacity
// LStr::ToFloat

bool LoadScalarField_iGUIView_FMinimalOpacity_FIELD(mlNode* Node, iObject* Obj) 
{
   (dynamic_cast<iGUIView*>(Obj))->FMinimalOpacity=LStr::ToFloat( Node->getValue() );
   return true; 
}

// SCALAR_PROPERTY_SAVE__FIELD
// MinimalOpacity
// FMinimalOpacity
// iGUIView
// FMinimalOpacity
// LStr::ToStrEpsilon

bool SaveScalarField_iGUIView_FMinimalOpacity_FIELD(iObject* Obj, mlNode** Result) 
{  
   LString Value =LStr::ToStrEpsilon(dynamic_cast<iGUIView*>(Obj)->FMinimalOpacity); 
   *Result = new mlNode("MinimalOpacity" , Value); 
   /* *Result->setValue( Value );*/   
   return true; 
}


// SCALAR_PROPERTY_LOAD__FIELD
// MaximalOpacity
// FMaximalOpacity
// iGUIView
// FMaximalOpacity
// LStr::ToFloat

bool LoadScalarField_iGUIView_FMaximalOpacity_FIELD(mlNode* Node, iObject* Obj) 
{
   (dynamic_cast<iGUIView*>(Obj))->FMaximalOpacity=LStr::ToFloat( Node->getValue() );
   return true; 
}

// SCALAR_PROPERTY_SAVE__FIELD
// MaximalOpacity
// FMaximalOpacity
// iGUIView
// FMaximalOpacity
// LStr::ToStrEpsilon

bool SaveScalarField_iGUIView_FMaximalOpacity_FIELD(iObject* Obj, mlNode** Result) 
{  
   LString Value =LStr::ToStrEpsilon(dynamic_cast<iGUIView*>(Obj)->FMaximalOpacity); 
   *Result = new mlNode("MaximalOpacity" , Value); 
   /* *Result->setValue( Value );*/   
   return true; 
}


// SCALAR_PROPERTY_LOAD__FIELD
// OpacityDeltaPlus
// FOpacityDeltaPlus
// iGUIView
// FOpacityDeltaPlus
// LStr::ToFloat

bool LoadScalarField_iGUIView_FOpacityDeltaPlus_FIELD(mlNode* Node, iObject* Obj) 
{
   (dynamic_cast<iGUIView*>(Obj))->FOpacityDeltaPlus=LStr::ToFloat( Node->getValue() );
   return true; 
}

// SCALAR_PROPERTY_SAVE__FIELD
// OpacityDeltaPlus
// FOpacityDeltaPlus
// iGUIView
// FOpacityDeltaPlus
// LStr::ToStrEpsilon

bool SaveScalarField_iGUIView_FOpacityDeltaPlus_FIELD(iObject* Obj, mlNode** Result) 
{  
   LString Value =LStr::ToStrEpsilon(dynamic_cast<iGUIView*>(Obj)->FOpacityDeltaPlus); 
   *Result = new mlNode("OpacityDeltaPlus" , Value); 
   /* *Result->setValue( Value );*/   
   return true; 
}


// SCALAR_PROPERTY_LOAD__FIELD
// OpacityDeltaMinus
// FOpacityDeltaMinus
// iGUIView
// FOpacityDeltaMinus
// LStr::ToFloat

bool LoadScalarField_iGUIView_FOpacityDeltaMinus_FIELD(mlNode* Node, iObject* Obj) 
{
   (dynamic_cast<iGUIView*>(Obj))->FOpacityDeltaMinus=LStr::ToFloat( Node->getValue() );
   return true; 
}

// SCALAR_PROPERTY_SAVE__FIELD
// OpacityDeltaMinus
// FOpacityDeltaMinus
// iGUIView
// FOpacityDeltaMinus
// LStr::ToStrEpsilon

bool SaveScalarField_iGUIView_FOpacityDeltaMinus_FIELD(iObject* Obj, mlNode** Result) 
{  
   LString Value =LStr::ToStrEpsilon(dynamic_cast<iGUIView*>(Obj)->FOpacityDeltaMinus); 
   *Result = new mlNode("OpacityDeltaMinus" , Value); 
   /* *Result->setValue( Value );*/   
   return true; 
}


// SCALAR_PROPERTY_LOAD__FIELD
// OpacityDeltaDissolve
// FOpacityDeltaDissolve
// iGUIView
// FOpacityDeltaDissolve
// LStr::ToFloat

bool LoadScalarField_iGUIView_FOpacityDeltaDissolve_FIELD(mlNode* Node, iObject* Obj) 
{
   (dynamic_cast<iGUIView*>(Obj))->FOpacityDeltaDissolve=LStr::ToFloat( Node->getValue() );
   return true; 
}

// SCALAR_PROPERTY_SAVE__FIELD
// OpacityDeltaDissolve
// FOpacityDeltaDissolve
// iGUIView
// FOpacityDeltaDissolve
// LStr::ToStrEpsilon

bool SaveScalarField_iGUIView_FOpacityDeltaDissolve_FIELD(iObject* Obj, mlNode** Result) 
{  
   LString Value =LStr::ToStrEpsilon(dynamic_cast<iGUIView*>(Obj)->FOpacityDeltaDissolve); 
   *Result = new mlNode("OpacityDeltaDissolve" , Value); 
   /* *Result->setValue( Value );*/   
   return true; 
}


// OBJECT_PROPERTY_LOAD__FIELD
// Font
// FFontProperties
// iGUIView
// FFontProperties

bool LoadObjectField_iGUIView_FFontProperties_FIELD(mlNode* Node, iObject* Obj) 
{
   iObject** Ptr = reinterpret_cast<iObject**>(&(dynamic_cast<iGUIView*>(Obj)->FFontProperties)); 
   *Ptr = NULL;   
   return Obj->Env->Linker->LoadObject(Node, Ptr);
}

// OBJECT_PROPERTY_SAVE__FIELD
// Font
// FFontProperties
// iGUIView
// FFontProperties

bool SaveObjectField_iGUIView_FFontProperties_FIELD(iObject* Obj, mlNode** Result) 
{ 
  iGUIView* Object = dynamic_cast<iGUIView*>(Obj); 
   if ( Object->FFontProperties== NULL ) 
   { 
      *Result = new mlNode("Object", "NULL"); 
      return true; 
   } 
   if (!(Object->FFontProperties)->Save( Result )) return false; 
   (*Result)->setID("Font"); 
   return true; 
}


// SCALAR_PROPERTY_LOAD__FIELD
// KeyboardSelectable
// FKeyboardSelectable
// iGUIView
// FKeyboardSelectable
// LStr::ToBool

bool LoadScalarField_iGUIView_FKeyboardSelectable_FIELD(mlNode* Node, iObject* Obj) 
{
   (dynamic_cast<iGUIView*>(Obj))->FKeyboardSelectable=LStr::ToBool( Node->getValue() );
   return true; 
}

// SCALAR_PROPERTY_SAVE__FIELD
// KeyboardSelectable
// FKeyboardSelectable
// iGUIView
// FKeyboardSelectable
// LStr::ToStr_Bool

bool SaveScalarField_iGUIView_FKeyboardSelectable_FIELD(iObject* Obj, mlNode** Result) 
{  
   LString Value =LStr::ToStr_Bool(dynamic_cast<iGUIView*>(Obj)->FKeyboardSelectable); 
   *Result = new mlNode("KeyboardSelectable" , Value); 
   /* *Result->setValue( Value );*/   
   return true; 
}




void RegisterPackageLinderdaumCoreClass276(sEnvironment* Env)
{
   iStaticClass* StaticClass = new clNativeStaticClass<iGUIView>;

   StaticClass->Env = Env;

#if !defined(_DISABLE_METHODS_)
   #define _RM__(Mtd) REG_CLS_MTD(iGUIView,Mtd)
   _RM__(EndLoad)
   _RM__(SetRegionState)
   _RM__(MoveRel)
   _RM__(SetSize)
   _RM__(GetViewOpacity)
   _RM__(PreRender)
   _RM__(PostRender)
   _RM__(AddView)
   _RM__(AddViews)
   _RM__(RemoveView)
   _RM__(IsMouseOver)
   _RM__(GetMousePos)
   _RM__(IsViewKeyboardSelectable)
   _RM__(IsPage)
   _RM__(IsViewDockable)
   _RM__(IsViewDraggable)
   _RM__(IsViewSizeable)
   _RM__(IsViewDissolvable)
   _RM__(IsViewDraggableAt)
   _RM__(IsViewSizeableAt)
   _RM__(IsTopmost)
   _RM__(IsPageActive)
   _RM__(DragTo)
   _RM__(ResizeCornerTo)
   _RM__(CanFocus)
   _RM__(IsBeenDragged)
   _RM__(IsBeenSized)
   _RM__(SuggestMinimalWidth)
   _RM__(SuggestMinimalHeight)
   _RM__(IsMinimized)
   _RM__(IsMaximized)
   _RM__(Minimize)
   _RM__(Maximize)
   _RM__(GetToolTipTime)
   _RM__(GetToolTipText)
   _RM__(SetToolTipTime)
   _RM__(SetToolTipText)
   _RM__(ExecuteCommandsStack)
   _RM__(ExecuteCommandsStackFadeIn)
   _RM__(DispatchSpecialKey)
   _RM__(GetConsoleVariable)
   _RM__(GetConsoleCommand)
   _RM__(GetConsoleCommandFadeIn)
   _RM__(GetParentView)
   _RM__(FindSubViewByID)
   _RM__(FindAllSubViewsByID)
   _RM__(GetTotalSubViews)
   _RM__(GetSubView)
   _RM__(SetSubView)
   _RM__(SetVisible)
   _RM__(IsVisible)
   _RM__(SetInteractive)
   _RM__(IsInteractive)
   _RM__(SetOnTopPriority)
   _RM__(GetOnTopPriority)
   _RM__(RenderHierarchy)
   _RM__(RenderTopmost)
   _RM__(RemoveAllChildViews)
   _RM__(FindView)
   _RM__(ToFront)
   _RM__(BindConsoleCommandS)
   _RM__(BindConsoleCommandFadeInS)
   _RM__(BindConsoleVariableS)
   _RM__(GetConsoleVariableName)
   _RM__(GetDefaultColor)
   _RM__(SetDefaultColor)
   _RM__(SetDefaultColorHex)
   _RM__(GetDefaultColorHex)
   _RM__(GetFont)
   _RM__(GetCommand)
   _RM__(SetCommand)
   _RM__(Event_Minimized)
   _RM__(Event_Maximized)
   _RM__(Event_Shrinked)
   _RM__(Event_Dissolved)
   _RM__(Event_MouseInside)
   _RM__(Event_MouseOutside)
   _RM__(Event_MouseRight)
   _RM__(Event_Timer)
   _RM__(Event_StartDragging)
   _RM__(Event_StopDragging)
   _RM__(Event_StartResize)
   _RM__(Event_StopResize)
   #undef _RM__
#endif // _DISABLE_METHODS_
   REGISTER_PROPERTY__SCALAR_GETTER_SETTER(OnTop, iGUIView, OnTop)

   REGISTER_PROPERTY__SCALAR_GETTER_SETTER(BindConsoleCommand, iGUIView, BindConsoleCommand)

   REGISTER_PROPERTY__SCALAR_GETTER_SETTER(BindConsoleCommandFadeIn, iGUIView, BindConsoleCommandFadeIn)

   REGISTER_PROPERTY__SCALAR_GETTER_SETTER(BindConsoleVariable, iGUIView, BindConsoleVariable)

   REGISTER_PROPERTY__SCALAR_GETTER_SETTER(Visible, iGUIView, Visible)

   REGISTER_PROPERTY__SCALAR_GETTER_SETTER(Interactive, iGUIView, Interactive)

   REGISTER_PROPERTY__SCALAR_GETTER_SETTER(ToolTip, iGUIView, ToolTip)

   REGISTER_PROPERTY__SCALAR_GETTER_SETTER(ToolTipTime, iGUIView, ToolTipTime)

   REGISTER_PROPERTY__SCALAR_GETTER_SETTER(Color, iGUIView, Color)

   REGISTER_PROPERTY__SCALAR_GETTER_SETTER(ColorHex, iGUIView, ColorHex)

   REGISTER_PROPERTY__SCALAR_ARRAY_FIELD(FCommandsStack, iGUIView, ConsoleCommand)

   REGISTER_PROPERTY__SCALAR_ARRAY_FIELD(FCommandsStackFadeIn, iGUIView, ConsoleCommandFadeIn)

   REGISTER_PROPERTY__OBJECT_ARRAY_FIELD(FChildViews, iGUIView, ChildViews)

   REGISTER_PROPERTY__SCALAR_FIELD(FMinimalOpacity, iGUIView, MinimalOpacity)

   REGISTER_PROPERTY__SCALAR_FIELD(FMaximalOpacity, iGUIView, MaximalOpacity)

   REGISTER_PROPERTY__SCALAR_FIELD(FOpacityDeltaPlus, iGUIView, OpacityDeltaPlus)

   REGISTER_PROPERTY__SCALAR_FIELD(FOpacityDeltaMinus, iGUIView, OpacityDeltaMinus)

   REGISTER_PROPERTY__SCALAR_FIELD(FOpacityDeltaDissolve, iGUIView, OpacityDeltaDissolve)

   REGISTER_PROPERTY__OBJECT_FIELD(FFontProperties, iGUIView, Font)

   REGISTER_PROPERTY__SCALAR_FIELD(FKeyboardSelectable, iGUIView, KeyboardSelectable)

   StaticClass->SetSuperClassName( "iGUIRegion" );

   Env->Linker->RegisterStaticClass( StaticClass );
}

#include "Linderdaum/Scene/Heightmaps/LHeightMap.h"
         // Class: iIntrusiveCounter
         // Class: iObject
         // Class: iHeightDataProvider

void RegisterPackageLinderdaumCoreClass277(sEnvironment* Env)
{
   iStaticClass* StaticClass = new clNativeStaticClass<iHeightDataProvider>;

   StaticClass->Env = Env;

#if !defined(_DISABLE_METHODS_)
   #define _RM__(Mtd) REG_CLS_MTD(iHeightDataProvider,Mtd)
   _RM__(GetSizeX)
   _RM__(GetSizeY)
   _RM__(GetHeight)
   _RM__(SetHeight)
   _RM__(GetMaximalHeight)
   _RM__(GetMinimalHeight)
   #undef _RM__
#endif // _DISABLE_METHODS_
   StaticClass->SetSuperClassName( "iObject" );

   Env->Linker->RegisterStaticClass( StaticClass );
}
         // Class: iIntrusiveCounter
         // Class: iObject
         // Class: iHeightMapFacetter
            // Adding abstract: FacetHeightMap
            // Adding abstract: UpdateFacettedHeightMap
      // Abstract method: FacetHeightMap
      // Abstract method: UpdateFacettedHeightMap

void RegisterPackageLinderdaumCoreClass278(sEnvironment* Env)
{
   iStaticClass* StaticClass = new clNativeAbstractStaticClass<iHeightMapFacetter>;

   StaticClass->Env = Env;

#if !defined(_DISABLE_METHODS_)
   REG_CLS_MTD( iHeightMapFacetter,FacetHeightMap )
   REG_CLS_MTD( iHeightMapFacetter,UpdateFacettedHeightMap )
#endif // _DISABLE_METHODS_
   StaticClass->SetSuperClassName( "iObject" );

   Env->Linker->RegisterStaticClass( StaticClass );
}

#include "Linderdaum/Core/VFS/iIStream.h"
         // Class: iIntrusiveCounter
         // Class: iObject
         // Class: iIStream
            // Adding abstract: GetVirtualFileName
            // Adding abstract: GetFileName
            // Adding abstract: Seek
            // Adding abstract: SeekOffset
            // Adding abstract: BlockRead
            // Adding abstract: ReadLine
            // Adding abstract: ReadLineLength
            // Adding abstract: ReadLineTrimLeadSpaces
            // Adding abstract: ReadInt_Binary
            // Adding abstract: Eof
            // Adding abstract: GetFileSize
            // Adding abstract: GetFilePos
            // Adding abstract: MapStream
            // Adding abstract: MapStreamFromCurrentPos
      // Abstract method: GetVirtualFileName
      // Abstract method: GetFileName
      // Abstract method: Seek
      // Abstract method: SeekOffset
      // Abstract method: BlockRead
      // Abstract method: ReadLine
      // Abstract method: ReadLineLength
      // Abstract method: ReadLineTrimLeadSpaces
      // Abstract method: ReadInt_Binary
      // Abstract method: Eof
      // Abstract method: GetFileSize
      // Abstract method: GetFilePos
      // Abstract method: MapStream
      // Abstract method: MapStreamFromCurrentPos

void RegisterPackageLinderdaumCoreClass279(sEnvironment* Env)
{
   iStaticClass* StaticClass = new clNativeAbstractStaticClass<iIStream>;

   StaticClass->Env = Env;

#if !defined(_DISABLE_METHODS_)
   #define _RM__(Mtd) REG_CLS_MTD(iIStream,Mtd)
   _RM__(GetVirtualFileName)
   _RM__(GetFileName)
   _RM__(Seek)
   _RM__(SeekOffset)
   _RM__(BlockRead)
   _RM__(ReadLine)
   _RM__(ReadLineLength)
   _RM__(ReadLineTrimLeadSpaces)
   _RM__(ReadInt_Binary)
   _RM__(Eof)
   _RM__(GetFileSize)
   _RM__(GetFilePos)
   _RM__(GetBytesLeft)
   _RM__(MapStream)
   _RM__(MapStreamFromCurrentPos)
   #undef _RM__
#endif // _DISABLE_METHODS_
   StaticClass->SetSuperClassName( "iObject" );

   Env->Linker->RegisterStaticClass( StaticClass );
}
         // Class: iIntrusiveCounter
         // Class: iObject
         // Class: iInputDevice
            // Adding abstract: GetName
            // Adding abstract: Poll
            // Adding abstract: Start
            // Adding abstract: IsStarted
            // Adding abstract: Stop
            // Adding abstract: GetNumAxes
            // Adding abstract: SetAxisRange
            // Adding abstract: SetAxisDeadZone
            // Adding abstract: SetAxisSaturation
            // Adding abstract: GetAxisValue
            // Adding abstract: GetAxisName
            // Adding abstract: SetAxisValue
            // Adding abstract: GetKeyName
            // Adding abstract: IsPressed
            // Adding abstract: GetNumKeys
            // Adding abstract: SetKeyState
      // Abstract method: GetName
      // Abstract method: Poll
      // Abstract method: Start
      // Abstract method: IsStarted
      // Abstract method: Stop
      // Abstract method: GetNumAxes
      // Abstract method: SetAxisRange
      // Abstract method: SetAxisDeadZone
      // Abstract method: SetAxisSaturation
      // Abstract method: GetAxisValue
      // Abstract method: GetAxisName
      // Abstract method: SetAxisValue
      // Abstract method: GetKeyName
      // Abstract method: IsPressed
      // Abstract method: GetNumKeys
      // Abstract method: SetKeyState

void RegisterPackageLinderdaumCoreClass280(sEnvironment* Env)
{
   iStaticClass* StaticClass = new clNativeAbstractStaticClass<iInputDevice>;

   StaticClass->Env = Env;

#if !defined(_DISABLE_METHODS_)
   #define _RM__(Mtd) REG_CLS_MTD(iInputDevice,Mtd)
   _RM__(RunSystemSetup)
   _RM__(SystemSetupAvailable)
   _RM__(GetName)
   _RM__(Poll)
   _RM__(GetLastError)
   _RM__(GetLastErrorMsg)
   _RM__(Start)
   _RM__(IsStarted)
   _RM__(Stop)
   _RM__(GetNumAxes)
   _RM__(SetAxisRange)
   _RM__(SetAxisDeadZone)
   _RM__(SetAxisSaturation)
   _RM__(GetAxisValue)
   _RM__(GetValues)
   _RM__(GetAxisName)
   _RM__(GetAxisIndex)
   _RM__(SetAxisValue)
   _RM__(GetKeyName)
   _RM__(GetKeyIndex)
   _RM__(IsPressed)
   _RM__(GetNumKeys)
   _RM__(SetKeyState)
   _RM__(IsAxisMoved)
   _RM__(IsMovedAny)
   _RM__(IsPressedAny)
   _RM__(PackDeviceState)
   _RM__(PackDeviceInfo)
   _RM__(UnpackDeviceState)
   #undef _RM__
#endif // _DISABLE_METHODS_
   StaticClass->SetSuperClassName( "iObject" );

   Env->Linker->RegisterStaticClass( StaticClass );
}
         // Class: iIntrusiveCounter
         // Class: iObject
         // Class: iInputDeviceList
            // Adding abstract: ReenumerateDevices
      // Abstract method: ReenumerateDevices

void RegisterPackageLinderdaumCoreClass281(sEnvironment* Env)
{
   iStaticClass* StaticClass = new clNativeAbstractStaticClass<iInputDeviceList>;

   StaticClass->Env = Env;

#if !defined(_DISABLE_METHODS_)
   #define _RM__(Mtd) REG_CLS_MTD(iInputDeviceList,Mtd)
   _RM__(AfterConstruction)
   _RM__(SetWindowHandle)
   _RM__(GetNumDevices)
   _RM__(GetDevice)
   _RM__(ReenumerateDevices)
   _RM__(GetDeviceIndex)
   _RM__(GetStdMouse)
   _RM__(GetStdKeyboard)
   _RM__(GetJoystick)
   _RM__(GetLinearAccelerometer)
   _RM__(GetGyroscope)
   _RM__(GetGPS)
   _RM__(GetLastError)
   _RM__(GetLastErrorMsg)
   _RM__(PollDevices)
   _RM__(BindKey)
   _RM__(BindAxis)
   _RM__(SetDeviceAlias)
   _RM__(ClearAlias)
   _RM__(UnbindKey)
   _RM__(UnbindAxis)
   _RM__(UpdateBindVars)
   _RM__(HapticFeedback)
   _RM__(HapticFeedback_Tap)
   _RM__(HapticFeedback_LongPress)
   #undef _RM__
#endif // _DISABLE_METHODS_
   StaticClass->SetSuperClassName( "iObject" );

   Env->Linker->RegisterStaticClass( StaticClass );
}

#include "iKernel2D_Tunneller.h"

void RegisterPackageLinderdaumCoreClass282(sEnvironment* Env)
{
#if !defined(_DISABLE_TUNNELLERS_)
   iStaticClass* StaticClass = new clNativeStaticClass<iKernel2D_Tunneller>;

   StaticClass->Env = Env;

#if !defined(_DISABLE_METHODS_)
   REG_CLS_MTD( iKernel2D,GetValue )
#endif // _DISABLE_METHODS_
   StaticClass->SetSuperClassName( "iObject" );

   Env->Linker->RegisterStaticClass( StaticClass );
#endif // _DISABLE_TUNNELLERS_
}
         // Class: iIntrusiveCounter
         // Class: iObject
         // Class: iKernel2D

void RegisterPackageLinderdaumCoreClass283(sEnvironment* Env)
{
   iStaticClass* StaticClass = new clNativeStaticClass<iKernel2D>;

   StaticClass->Env = Env;

#if !defined(_DISABLE_METHODS_)
   REG_CLS_MTD( iKernel2D,GetValue )
#endif // _DISABLE_METHODS_
   StaticClass->SetSuperClassName( "iObject" );

   Env->Linker->RegisterStaticClass( StaticClass );
}
         // Class: iIntrusiveCounter
         // Class: iObject
         // Class: iMeshLoader
            // Adding abstract: LoadMesh
      // Abstract method: LoadMesh

void RegisterPackageLinderdaumCoreClass284(sEnvironment* Env)
{
   iStaticClass* StaticClass = new clNativeAbstractStaticClass<iMeshLoader>;

   StaticClass->Env = Env;

#if !defined(_DISABLE_METHODS_)
   REG_CLS_MTD( iMeshLoader,LoadMesh )
#endif // _DISABLE_METHODS_
   StaticClass->SetSuperClassName( "iObject" );

   Env->Linker->RegisterStaticClass( StaticClass );
}

#include "Linderdaum/Core/RTTI/Method.h"
         // Class: iIntrusiveCounter
         // Class: iObject
         // Class: iMethod
            // Adding abstract: Invoke
            // Adding abstract: GetParamsCount
            // Adding abstract: GetParamSize
            // Adding abstract: CreateParameter
      // Abstract method: Invoke
      // Abstract method: GetParamsCount
      // Abstract method: GetParamSize
      // Abstract method: CreateParameter

void RegisterPackageLinderdaumCoreClass285(sEnvironment* Env)
{
   iStaticClass* StaticClass = new clNativeAbstractStaticClass<iMethod>;

   StaticClass->Env = Env;

#if !defined(_DISABLE_METHODS_)
   #define _RM__(Mtd) REG_CLS_MTD(iMethod,Mtd)
   _RM__(GetMethodName)
   _RM__(SetMethodName)
   _RM__(GetReturnValuePtr)
   _RM__(GetReturnValue)
   _RM__(Invoke)
   _RM__(GetParamsCount)
   _RM__(GetParamSize)
   _RM__(CreateParameter)
   _RM__(IsScripted)
   #undef _RM__
#endif // _DISABLE_METHODS_
   StaticClass->SetSuperClassName( "iObject" );

   Env->Linker->RegisterStaticClass( StaticClass );
}
         // Class: iIntrusiveCounter
         // Class: iObject
         // Class: iMountPoint
            // Adding abstract: FileExistsAtThisPoint
            // Adding abstract: MapToThisPoint
            // Adding abstract: CreateRAWFile
            // Adding abstract: GetFileTime
      // Abstract method: FileExistsAtThisPoint
      // Abstract method: MapToThisPoint
      // Abstract method: CreateRAWFile
      // Abstract method: GetFileTime

void RegisterPackageLinderdaumCoreClass286(sEnvironment* Env)
{
   iStaticClass* StaticClass = new clNativeAbstractStaticClass<iMountPoint>;

   StaticClass->Env = Env;

#if !defined(_DISABLE_METHODS_)
   #define _RM__(Mtd) REG_CLS_MTD(iMountPoint,Mtd)
   _RM__(SetName)
   _RM__(GetName)
   _RM__(FileExistsAtThisPoint)
   _RM__(MapToThisPoint)
   _RM__(CreateRAWFile)
   _RM__(GetFileTime)
   _RM__(IsPhysical)
   _RM__(WaitLoad)
   #undef _RM__
#endif // _DISABLE_METHODS_
   StaticClass->SetSuperClassName( "iObject" );

   Env->Linker->RegisterStaticClass( StaticClass );
}

#include "Linderdaum/Core/VFS/iOStream.h"
         // Class: iIntrusiveCounter
         // Class: iObject
         // Class: iOStream
            // Adding abstract: GetFileName
            // Adding abstract: Seek
            // Adding abstract: GetFilePos
            // Adding abstract: BlockWrite
      // Abstract method: GetFileName
      // Abstract method: Seek
      // Abstract method: GetFilePos
      // Abstract method: BlockWrite

void RegisterPackageLinderdaumCoreClass287(sEnvironment* Env)
{
   iStaticClass* StaticClass = new clNativeAbstractStaticClass<iOStream>;

   StaticClass->Env = Env;

#if !defined(_DISABLE_METHODS_)
   #define _RM__(Mtd) REG_CLS_MTD(iOStream,Mtd)
   _RM__(GetFileName)
   _RM__(Seek)
   _RM__(GetFilePos)
   _RM__(BlockWrite)
   _RM__(WriteLine)
   _RM__(WriteLineLength)
   _RM__(WriteInt_Binary)
   #undef _RM__
#endif // _DISABLE_METHODS_
   StaticClass->SetSuperClassName( "iObject" );

   Env->Linker->RegisterStaticClass( StaticClass );
}

#include "iObject_Tunneller.h"

#include "Linderdaum/Core/iObject.h"

void RegisterPackageLinderdaumCoreClass288(sEnvironment* Env)
{
#if !defined(_DISABLE_TUNNELLERS_)
   iStaticClass* StaticClass = new clNativeStaticClass<iObject_Tunneller>;

   StaticClass->Env = Env;

#if !defined(_DISABLE_METHODS_)
   #define _RM__(Mtd) REG_CLS_MTD(iObject,Mtd)
   _RM__(GetObjectID)
   _RM__(SetObjectID)
   _RM__(GetAllocationContext)
   _RM__(AfterConstruction)
   _RM__(BeforeDestruction)
   _RM__(DisposeObject)
   _RM__(Connect)
   _RM__(ConnectWithTag)
   _RM__(ConnectWithPriority)
   _RM__(Disconnect)
   _RM__(DisconnectObject)
   _RM__(DisconnectAll)
   _RM__(SendSync)
   _RM__(SendAsyncNoArgs)
   _RM__(SendAsync)
   _RM__(SendAsyncDelayedNoArgs)
   _RM__(SendAsyncDelayed)
   _RM__(SendAsyncCapsule)
   _RM__(SendAsyncCancel)
   _RM__(BeginLoad)
   _RM__(EndLoad)
   _RM__(BeginSave)
   _RM__(EndSave)
   _RM__(LoadFromFile)
   _RM__(SaveToFile)
   _RM__(GenerateGUID)
   _RM__(DeepCopy)
   _RM__(SetPropertyValue)
   _RM__(GetPropertyValue)
   _RM__(FindProperty)
   _RM__(BindPropertyToCVar)
   _RM__(GetStaticClass)
   _RM__(SetStaticClass)
   _RM__(ClassName)
   _RM__(NativeClassName)
   _RM__(GetReturnValue)
   _RM__(SetReturnValue)
   _RM__(IsMethodOverriden)
   _RM__(CallMethod)
   _RM__(SetInheritedCall)
   _RM__(ResetInheritedCall)
   _RM__(GetInheritedCall)
   _RM__(SetActiveState)
   _RM__(GetActiveState)
   _RM__(FindMethodWithinStates)
   #undef _RM__
#endif // _DISABLE_METHODS_
   StaticClass->SetSuperClassName( "iIntrusiveCounter" );

   Env->Linker->RegisterStaticClass( StaticClass );
#endif // _DISABLE_TUNNELLERS_
}
         // Class: iIntrusiveCounter
         // Class: iObject
#include "Linderdaum/Environment.h"
DEFINE_NATIVE_POD_FIELD_BINDER(iObject, Env, sEnvironment)
// SCALAR_PROPERTY_LOAD__SETTER
// ID
// ""
// iObject
// SetObjectID
// EMPTY_CONVERTER

bool LoadScalarField_iObject_ID_SETTER(mlNode* Node, iObject* Obj) 
{
   (dynamic_cast<iObject*>(Obj))->SetObjectID(EMPTY_CONVERTER( Node->getValue() ) );
   return true; 
}

// SCALAR_PROPERTY_SAVE__GETTER
// ID
// ""
// iObject
// GetObjectID
// EMPTY_CONVERTER

bool SaveScalarField_iObject_ID_GETTER(iObject* Obj, mlNode** Result)   
{  
   LString Value =EMPTY_CONVERTER(dynamic_cast<iObject*>(Obj)->GetObjectID() ); 
   *Result = new mlNode("ID" , Value ); 
   /* *Result->setValue( Value ); */   
   return true; 
}




void RegisterPackageLinderdaumCoreClass289(sEnvironment* Env)
{
   iStaticClass* StaticClass = new clNativeStaticClass<iObject>;

   StaticClass->Env = Env;

#if !defined(_DISABLE_METHODS_)
   #define _RM__(Mtd) REG_CLS_MTD(iObject,Mtd)
   _RM__(GetObjectID)
   _RM__(SetObjectID)
   _RM__(GetAllocationContext)
   _RM__(AfterConstruction)
   _RM__(BeforeDestruction)
   _RM__(DisposeObject)
   _RM__(Connect)
   _RM__(ConnectWithTag)
   _RM__(ConnectWithPriority)
   _RM__(Disconnect)
   _RM__(DisconnectObject)
   _RM__(DisconnectAll)
   _RM__(SendSync)
   _RM__(SendAsyncNoArgs)
   _RM__(SendAsync)
   _RM__(SendAsyncDelayedNoArgs)
   _RM__(SendAsyncDelayed)
   _RM__(SendAsyncCapsule)
   _RM__(SendAsyncCancel)
   _RM__(BeginLoad)
   _RM__(EndLoad)
   _RM__(BeginSave)
   _RM__(EndSave)
   _RM__(LoadFromFile)
   _RM__(SaveToFile)
   _RM__(GenerateGUID)
   _RM__(DeepCopy)
   _RM__(SetPropertyValue)
   _RM__(GetPropertyValue)
   _RM__(FindProperty)
   _RM__(BindPropertyToCVar)
   _RM__(GetStaticClass)
   _RM__(SetStaticClass)
   _RM__(ClassName)
   _RM__(NativeClassName)
   _RM__(GetReturnValue)
   _RM__(SetReturnValue)
   _RM__(IsMethodOverriden)
   _RM__(CallMethod)
   _RM__(SetInheritedCall)
   _RM__(ResetInheritedCall)
   _RM__(GetInheritedCall)
   _RM__(SetActiveState)
   _RM__(GetActiveState)
   _RM__(FindMethodWithinStates)
   #undef _RM__
#endif // _DISABLE_METHODS_
   BIND_NATIVE_FIELD(iObject, Env);
   REGISTER_PROPERTY__SCALAR_GETTER_SETTER(ID, iObject, ID)

   StaticClass->SetSuperClassName( "iIntrusiveCounter" );

   Env->Linker->RegisterStaticClass( StaticClass );
}

#include "iPlacementConstraint_Tunneller.h"

void RegisterPackageLinderdaumCoreClass290(sEnvironment* Env)
{
#if !defined(_DISABLE_TUNNELLERS_)
   iStaticClass* StaticClass = new clNativeStaticClass<iPlacementConstraint_Tunneller>;

   StaticClass->Env = Env;

#if !defined(_DISABLE_METHODS_)
   REG_CLS_MTD( iPlacementConstraint,CanSnap )
   REG_CLS_MTD( iPlacementConstraint,Snap )
   REG_CLS_MTD( iPlacementConstraint,CanPlaceHere )
#endif // _DISABLE_METHODS_
   StaticClass->SetSuperClassName( "iObject" );

   Env->Linker->RegisterStaticClass( StaticClass );
#endif // _DISABLE_TUNNELLERS_
}
         // Class: iIntrusiveCounter
         // Class: iObject
         // Class: iPlacementConstraint

void RegisterPackageLinderdaumCoreClass291(sEnvironment* Env)
{
   iStaticClass* StaticClass = new clNativeStaticClass<iPlacementConstraint>;

   StaticClass->Env = Env;

#if !defined(_DISABLE_METHODS_)
   REG_CLS_MTD( iPlacementConstraint,CanSnap )
   REG_CLS_MTD( iPlacementConstraint,Snap )
   REG_CLS_MTD( iPlacementConstraint,CanPlaceHere )
#endif // _DISABLE_METHODS_
   StaticClass->SetSuperClassName( "iObject" );

   Env->Linker->RegisterStaticClass( StaticClass );
}

#include "iPostprocessor_Tunneller.h"

#include "Linderdaum/Scene/Postprocess/iPostprocessor.h"

void RegisterPackageLinderdaumCoreClass292(sEnvironment* Env)
{
#if !defined(_DISABLE_TUNNELLERS_)
   iStaticClass* StaticClass = new clNativeStaticClass<iPostprocessor_Tunneller>;

   StaticClass->Env = Env;

#if !defined(_DISABLE_METHODS_)
   #define _RM__(Mtd) REG_CLS_MTD(iPostprocessor,Mtd)
   _RM__(Render)
   _RM__(IsEnabled)
   _RM__(SetEnableVarName)
   _RM__(GetEnableVarName)
   _RM__(GetEnableVar)
   #undef _RM__
#endif // _DISABLE_METHODS_
   StaticClass->SetSuperClassName( "iObject" );

   Env->Linker->RegisterStaticClass( StaticClass );
#endif // _DISABLE_TUNNELLERS_
}
         // Class: iIntrusiveCounter
         // Class: iObject
         // Class: iPostprocessor
            // Adding abstract: Render
      // Abstract method: Render
// SCALAR_PROPERTY_LOAD__SETTER
// EnableVarName
// ""
// iPostprocessor
// SetEnableVarName
// EMPTY_CONVERTER

bool LoadScalarField_iPostprocessor_EnableVarName_SETTER(mlNode* Node, iObject* Obj) 
{
   (dynamic_cast<iPostprocessor*>(Obj))->SetEnableVarName(EMPTY_CONVERTER( Node->getValue() ) );
   return true; 
}

// SCALAR_PROPERTY_SAVE__GETTER
// EnableVarName
// ""
// iPostprocessor
// GetEnableVarName
// EMPTY_CONVERTER

bool SaveScalarField_iPostprocessor_EnableVarName_GETTER(iObject* Obj, mlNode** Result)   
{  
   LString Value =EMPTY_CONVERTER(dynamic_cast<iPostprocessor*>(Obj)->GetEnableVarName() ); 
   *Result = new mlNode("EnableVarName" , Value ); 
   /* *Result->setValue( Value ); */   
   return true; 
}




void RegisterPackageLinderdaumCoreClass293(sEnvironment* Env)
{
   iStaticClass* StaticClass = new clNativeAbstractStaticClass<iPostprocessor>;

   StaticClass->Env = Env;

#if !defined(_DISABLE_METHODS_)
   #define _RM__(Mtd) REG_CLS_MTD(iPostprocessor,Mtd)
   _RM__(Render)
   _RM__(IsEnabled)
   _RM__(SetEnableVarName)
   _RM__(GetEnableVarName)
   _RM__(GetEnableVar)
   #undef _RM__
#endif // _DISABLE_METHODS_
   REGISTER_PROPERTY__SCALAR_GETTER_SETTER(EnableVarName, iPostprocessor, EnableVarName)

   StaticClass->SetSuperClassName( "iObject" );

   Env->Linker->RegisterStaticClass( StaticClass );
}

#include "iQuery_Tunneller.h"

#include "Linderdaum/Renderer/iQuery.h"

void RegisterPackageLinderdaumCoreClass294(sEnvironment* Env)
{
#if !defined(_DISABLE_TUNNELLERS_)
   iStaticClass* StaticClass = new clNativeStaticClass<iQuery_Tunneller>;

   StaticClass->Env = Env;

#if !defined(_DISABLE_METHODS_)
   #define _RM__(Mtd) REG_CLS_MTD(iQuery,Mtd)
   _RM__(BeginQuery)
   _RM__(EndQuery)
   _RM__(GetQuery)
   _RM__(IsAvailable)
   #undef _RM__
#endif // _DISABLE_METHODS_
   StaticClass->SetSuperClassName( "iObject" );

   Env->Linker->RegisterStaticClass( StaticClass );
#endif // _DISABLE_TUNNELLERS_
}
         // Class: iIntrusiveCounter
         // Class: iObject
         // Class: iQuery
            // Adding abstract: BeginQuery
            // Adding abstract: EndQuery
            // Adding abstract: GetQuery
            // Adding abstract: IsAvailable
      // Abstract method: BeginQuery
      // Abstract method: EndQuery
      // Abstract method: GetQuery
      // Abstract method: IsAvailable

void RegisterPackageLinderdaumCoreClass295(sEnvironment* Env)
{
   iStaticClass* StaticClass = new clNativeAbstractStaticClass<iQuery>;

   StaticClass->Env = Env;

#if !defined(_DISABLE_METHODS_)
   #define _RM__(Mtd) REG_CLS_MTD(iQuery,Mtd)
   _RM__(BeginQuery)
   _RM__(EndQuery)
   _RM__(GetQuery)
   _RM__(IsAvailable)
   #undef _RM__
#endif // _DISABLE_METHODS_
   StaticClass->SetSuperClassName( "iObject" );

   Env->Linker->RegisterStaticClass( StaticClass );
}
         // Class: iIntrusiveCounter
         // Class: iObject
         // Class: iRAWFile
            // Adding abstract: GetFileData
            // Adding abstract: GetFileSize
      // Abstract method: GetFileData
      // Abstract method: GetFileSize

void RegisterPackageLinderdaumCoreClass296(sEnvironment* Env)
{
   iStaticClass* StaticClass = new clNativeAbstractStaticClass<iRAWFile>;

   StaticClass->Env = Env;

#if !defined(_DISABLE_METHODS_)
   #define _RM__(Mtd) REG_CLS_MTD(iRAWFile,Mtd)
   _RM__(SetVirtualFileName)
   _RM__(SetFileName)
   _RM__(GetVirtualFileName)
   _RM__(GetFileName)
   _RM__(GetFileData)
   _RM__(GetFileSize)
   #undef _RM__
#endif // _DISABLE_METHODS_
   StaticClass->SetSuperClassName( "iObject" );

   Env->Linker->RegisterStaticClass( StaticClass );
}

#include "Linderdaum/Renderer/iRenderContext.h"
         // Class: iIntrusiveCounter
         // Class: iObject
         // Class: iRenderContext
            // Adding abstract: GetPixel
            // Adding abstract: SetViewport
            // Adding abstract: SetViewportV
            // Adding abstract: RestoreViewport
            // Adding abstract: SetClearColor4v
            // Adding abstract: GetScreenshotSize
            // Adding abstract: GetScreenshot
            // Adding abstract: GetVideoSystemInfo
            // Adding abstract: GetTotalVideoMemory
            // Adding abstract: GetFreeVideoMemory
            // Adding abstract: CheckError
            // Adding abstract: ClearRenderTarget
            // Adding abstract: SetPolygonFillMode
            // Adding abstract: Finish
            // Adding abstract: SetState
            // Adding abstract: UpdateState
      // Abstract method: GetPixel
      // Abstract method: SetViewport
      // Abstract method: SetViewportV
      // Abstract method: RestoreViewport
      // Abstract method: SetClearColor4v
      // Abstract method: GetScreenshotSize
      // Abstract method: GetScreenshot
      // Abstract method: GetVideoSystemInfo
      // Abstract method: GetTotalVideoMemory
      // Abstract method: GetFreeVideoMemory
      // Abstract method: CheckError
      // Abstract method: ClearRenderTarget
      // Abstract method: SetPolygonFillMode
      // Abstract method: Finish
      // Abstract method: SetState
      // Abstract method: UpdateState


void RegisterPackageLinderdaumCoreClass297(sEnvironment* Env)
{
   iStaticClass* StaticClass = new clNativeAbstractStaticClass<iRenderContext>;

   StaticClass->Env = Env;

#if !defined(_DISABLE_METHODS_)
   #define _RM__(Mtd) REG_CLS_MTD(iRenderContext,Mtd)
   _RM__(InitContext)
   _RM__(BeginFrame)
   _RM__(EndFrame)
   _RM__(GetRenderedTrianglesCount)
   _RM__(GetPixel)
   _RM__(SetViewport)
   _RM__(SetViewportV)
   _RM__(RestoreViewport)
   _RM__(SetClearColor4v)
   _RM__(GetScreenshotSize)
   _RM__(GetScreenshot)
   _RM__(MakeScreenshot)
   _RM__(GetVideoSystemInfo)
   _RM__(GetTotalVideoMemory)
   _RM__(GetFreeVideoMemory)
   _RM__(GetRendererSignature)
   _RM__(GuardExtension)
   _RM__(GuardVersion)
   _RM__(CheckError)
   _RM__(AddBuffer)
   _RM__(ClearRenderTarget)
   _RM__(SetPolygonFillMode)
   _RM__(Finish)
   _RM__(CreateRenderTarget)
   _RM__(CreateRenderTargetV)
   _RM__(CreateBuffer)
   _RM__(CreateTexture)
   _RM__(CreateShaderProgram)
   _RM__(GetEmptyShader)
   _RM__(GetCanvas)
   _RM__(GetGlyphsCache)
   _RM__(CreateVAMender)
   _RM__(CreateQuery)
   _RM__(AllocateEmptyVA)
   _RM__(CreatePostprocessChain)
   _RM__(CreatePostprocessor)
   _RM__(CreateFilterPostprocessor)
   _RM__(CreateHeightDataProvider)
   _RM__(CreateHeightMapFacetter)
   _RM__(SetState)
   _RM__(UpdateState)
   #undef _RM__
#endif // _DISABLE_METHODS_
   StaticClass->SetSuperClassName( "iObject" );

   Env->Linker->RegisterStaticClass( StaticClass );
}

#include "Linderdaum/Renderer/iRenderTarget.h"
         // Class: iIntrusiveCounter
         // Class: iObject
         // Class: iRenderTarget
            // Adding abstract: InitRenderTarget
            // Adding abstract: InitRenderTargetV
            // Adding abstract: GetColorTexture
            // Adding abstract: GetDepthTexture
            // Adding abstract: Bind
            // Adding abstract: BindReadFrom
            // Adding abstract: UnBind
            // Adding abstract: GetViewport
            // Adding abstract: UpdateWithProgram
            // Adding abstract: UpdateWithRenderState
      // Abstract method: InitRenderTarget
      // Abstract method: InitRenderTargetV
      // Abstract method: GetColorTexture
      // Abstract method: GetDepthTexture
      // Abstract method: Bind
      // Abstract method: BindReadFrom
      // Abstract method: UnBind
      // Abstract method: GetViewport
      // Abstract method: UpdateWithProgram
      // Abstract method: UpdateWithRenderState

void RegisterPackageLinderdaumCoreClass298(sEnvironment* Env)
{
   iStaticClass* StaticClass = new clNativeAbstractStaticClass<iRenderTarget>;

   StaticClass->Env = Env;

#if !defined(_DISABLE_METHODS_)
   #define _RM__(Mtd) REG_CLS_MTD(iRenderTarget,Mtd)
   _RM__(InitRenderTarget)
   _RM__(InitRenderTargetV)
   _RM__(GetColorTexture)
   _RM__(GetDepthTexture)
   _RM__(Bind)
   _RM__(BindReadFrom)
   _RM__(UnBind)
   _RM__(GetViewport)
   _RM__(UpdateWithProgram)
   _RM__(UpdateWithRenderState)
   #undef _RM__
#endif // _DISABLE_METHODS_
   StaticClass->SetSuperClassName( "iObject" );

   Env->Linker->RegisterStaticClass( StaticClass );
}

#include "Linderdaum/Resources/iResource.h"
         // Class: iIntrusiveCounter
         // Class: iObject
         // Class: iResource
            // Adding abstract: GetCachingDir
      // Abstract method: GetCachingDir

void RegisterPackageLinderdaumCoreClass299(sEnvironment* Env)
{
   iStaticClass* StaticClass = new clNativeAbstractStaticClass<iResource>;

   StaticClass->Env = Env;

#if !defined(_DISABLE_METHODS_)
   #define _RM__(Mtd) REG_CLS_MTD(iResource,Mtd)
   _RM__(AfterConstruction)
   _RM__(IsCached)
   _RM__(IsAsyncLoadComplete)
   _RM__(SetAsyncLoadComplete)
   _RM__(WaitLoad)
   _RM__(Reload)
   _RM__(Unload)
   _RM__(CacheTo)
   _RM__(CacheFrom)
   _RM__(GetCachingDir)
   _RM__(GetCachedFileName)
   _RM__(GetResourceID)
   _RM__(GetFileTimeAtLoad)
   _RM__(GetFileName)
   _RM__(SetFileName)
   _RM__(ReloadResource)
   _RM__(IsSameResource)
   #undef _RM__
#endif // _DISABLE_METHODS_
   StaticClass->SetSuperClassName( "iObject" );

   Env->Linker->RegisterStaticClass( StaticClass );
}

#include "Linderdaum/Renderer/iShaderProgram.h"
         // Class: iIntrusiveCounter
         // Class: iObject
         // Class: iResource
            // Adding abstract: GetCachingDir
         // Class: iShaderProgram
            // Overriding abstract: GetCachingDir
            // Adding abstract: Bind
            // Adding abstract: UnBind
            // Adding abstract: BindUniforms
            // Adding abstract: CreateUniform
            // Adding abstract: SetUniformInt
            // Adding abstract: SetUniformIntArray
            // Adding abstract: SetUniformFloat
            // Adding abstract: SetUniformFloatArray
            // Adding abstract: SetUniformVec3Array
            // Adding abstract: SetUniformVec4Array
            // Adding abstract: SetUniformMat3Array
            // Adding abstract: SetUniformMat4Array
            // Adding abstract: SetUniformNameInt
            // Adding abstract: SetUniformNameIntArray
            // Adding abstract: SetUniformNameFloat
            // Adding abstract: SetUniformNameFloatArray
            // Adding abstract: SetUniformNameVec3Array
            // Adding abstract: SetUniformNameVec4Array
            // Adding abstract: SetUniformNameMat3Array
            // Adding abstract: SetUniformNameMat4Array
            // Adding abstract: SetTransformationUniforms
            // Adding abstract: SetMaterialUniforms
            // Adding abstract: SetGUIUniforms
            // Adding abstract: SetSceneUniformsPerRigid
            // Adding abstract: SetLightUniformsPerShader
            // Adding abstract: SetSceneUniformsPerShader
            // Adding abstract: SetFragDataLocationName
            // Adding abstract: SetAttribLocationName
            // Adding abstract: BindConsoleVariableType
            // Adding abstract: SetInputPrimitiveType
            // Adding abstract: SetOutputPrimitiveType
            // Adding abstract: SetOutputVerticesCount
            // Adding abstract: SetDefinesList
            // Adding abstract: GetDefinesList
      // Abstract method: Bind
      // Abstract method: UnBind
      // Abstract method: BindUniforms
      // Abstract method: CreateUniform
      // Abstract method: SetUniformInt
      // Abstract method: SetUniformIntArray
      // Abstract method: SetUniformFloat
      // Abstract method: SetUniformFloatArray
      // Abstract method: SetUniformVec3Array
      // Abstract method: SetUniformVec4Array
      // Abstract method: SetUniformMat3Array
      // Abstract method: SetUniformMat4Array
      // Abstract method: SetUniformNameInt
      // Abstract method: SetUniformNameIntArray
      // Abstract method: SetUniformNameFloat
      // Abstract method: SetUniformNameFloatArray
      // Abstract method: SetUniformNameVec3Array
      // Abstract method: SetUniformNameVec4Array
      // Abstract method: SetUniformNameMat3Array
      // Abstract method: SetUniformNameMat4Array
      // Abstract method: SetTransformationUniforms
      // Abstract method: SetMaterialUniforms
      // Abstract method: SetGUIUniforms
      // Abstract method: SetSceneUniformsPerRigid
      // Abstract method: SetLightUniformsPerShader
      // Abstract method: SetSceneUniformsPerShader
      // Abstract method: SetFragDataLocationName
      // Abstract method: SetAttribLocationName
      // Abstract method: BindConsoleVariableType
      // Abstract method: SetInputPrimitiveType
      // Abstract method: SetOutputPrimitiveType
      // Abstract method: SetOutputVerticesCount
      // Abstract method: SetDefinesList
      // Abstract method: GetDefinesList

void RegisterPackageLinderdaumCoreClass300(sEnvironment* Env)
{
   iStaticClass* StaticClass = new clNativeAbstractStaticClass<iShaderProgram>;

   StaticClass->Env = Env;

#if !defined(_DISABLE_METHODS_)
   #define _RM__(Mtd) REG_CLS_MTD(iShaderProgram,Mtd)
   _RM__(GetCachingDir)
   _RM__(RelinkShaderProgram)
   _RM__(Bind)
   _RM__(UnBind)
   _RM__(BindUniforms)
   _RM__(SetShaderCode)
   _RM__(GetShaderCode)
   _RM__(IsRelinkPending)
   _RM__(SetRelinkPending)
   _RM__(CreateUniform)
   _RM__(SetUniformInt)
   _RM__(SetUniformIntArray)
   _RM__(SetUniformFloat)
   _RM__(SetUniformFloatArray)
   _RM__(SetUniformVec3Array)
   _RM__(SetUniformVec4Array)
   _RM__(SetUniformMat3Array)
   _RM__(SetUniformMat4Array)
   _RM__(SetUniformNameInt)
   _RM__(SetUniformNameIntArray)
   _RM__(SetUniformNameFloat)
   _RM__(SetUniformNameFloatArray)
   _RM__(SetUniformNameVec3Array)
   _RM__(SetUniformNameVec4Array)
   _RM__(SetUniformNameMat3Array)
   _RM__(SetUniformNameMat4Array)
   _RM__(SetTransformationUniforms)
   _RM__(SetMaterialUniforms)
   _RM__(SetGUIUniforms)
   _RM__(SetSceneUniformsPerRigid)
   _RM__(SetLightUniformsPerShader)
   _RM__(SetSceneUniformsPerShader)
   _RM__(SetFragDataLocationName)
   _RM__(SetAttribLocationName)
   _RM__(GetActiveAttribStreams)
   _RM__(EnumerateVertexStreams)
   _RM__(BindConsoleVariable)
   _RM__(BindConsoleVariableVec3)
   _RM__(BindConsoleVariableVec4)
   _RM__(BindConsoleVariableMat4)
   _RM__(BindConsoleVariableType)
   _RM__(SetInputPrimitiveType)
   _RM__(SetOutputPrimitiveType)
   _RM__(SetOutputVerticesCount)
   _RM__(IsTesselationEnabled)
   _RM__(SetDefinesList)
   _RM__(GetDefinesList)
   _RM__(SetRenderTargetName)
   _RM__(GetRenderTargetName)
   _RM__(GetNumRenderTargets)
   _RM__(SetNumRenderTargets)
   #undef _RM__
#endif // _DISABLE_METHODS_
   StaticClass->SetSuperClassName( "iResource" );

   Env->Linker->RegisterStaticClass( StaticClass );
}

#include "Linderdaum/Core/RTTI/iStaticClass.h"
         // Class: iIntrusiveCounter
         // Class: iObject
         // Class: clState
         // Class: iStaticClass
            // Adding abstract: VirtualConstructor
            // Adding abstract: GetConstructorParamsCount
            // Adding abstract: IsAbstract
      // Abstract method: VirtualConstructor
      // Abstract method: GetConstructorParamsCount
      // Abstract method: IsAbstract
// SCALAR_PROPERTY_LOAD__SETTER
// SuperClass
// ""
// iStaticClass
// SetSuperClassName
// EMPTY_CONVERTER

bool LoadScalarField_iStaticClass_SuperClass_SETTER(mlNode* Node, iObject* Obj) 
{
   (dynamic_cast<iStaticClass*>(Obj))->SetSuperClassName(EMPTY_CONVERTER( Node->getValue() ) );
   return true; 
}

// SCALAR_PROPERTY_SAVE__GETTER
// SuperClass
// ""
// iStaticClass
// GetSuperClassName
// EMPTY_CONVERTER

bool SaveScalarField_iStaticClass_SuperClass_GETTER(iObject* Obj, mlNode** Result)   
{  
   LString Value =EMPTY_CONVERTER(dynamic_cast<iStaticClass*>(Obj)->GetSuperClassName() ); 
   *Result = new mlNode("SuperClass" , Value ); 
   /* *Result->setValue( Value ); */   
   return true; 
}




void RegisterPackageLinderdaumCoreClass301(sEnvironment* Env)
{
   iStaticClass* StaticClass = new clNativeAbstractStaticClass<iStaticClass>;

   StaticClass->Env = Env;

#if !defined(_DISABLE_METHODS_)
   #define _RM__(Mtd) REG_CLS_MTD(iStaticClass,Mtd)
   _RM__(DefaultConstructor)
   _RM__(InheritsFrom)
   _RM__(VirtualConstructor)
   _RM__(GetConstructorParamsCount)
   _RM__(RegisterState)
   _RM__(RegisterField)
   _RM__(RegisterProperty)
   _RM__(GetMetaObject)
   _RM__(IsAbstract)
   _RM__(GetSuperClass)
   _RM__(SetSuperClass)
   _RM__(SetSuperClassName)
   _RM__(GetSuperClassName)
   _RM__(GetSuperState)
   _RM__(FindMethod)
   _RM__(FindState)
   _RM__(FindField)
   _RM__(FindProperty)
   _RM__(GetPropertiesCount)
   _RM__(GetPropertyByIndex)
   _RM__(GetFieldsCount)
   _RM__(GetFieldByIndex)
   _RM__(GetMethodsCount)
   _RM__(GetMethodByLinearIndex)
   _RM__(RegisterNonNativeFields)
   _RM__(BuildVirtualTables)
   _RM__(GetStateIndexByName)
   _RM__(GetFieldIndexByName)
   _RM__(GetPropertyIndexByName)
   #undef _RM__
#endif // _DISABLE_METHODS_
   REGISTER_PROPERTY__SCALAR_GETTER_SETTER(SuperClass, iStaticClass, SuperClass)

   StaticClass->SetSuperClassName( "clState" );

   Env->Linker->RegisterStaticClass( StaticClass );
}

#include "iStringsApplet_Tunneller.h"

void RegisterPackageLinderdaumCoreClass302(sEnvironment* Env)
{
#if !defined(_DISABLE_TUNNELLERS_)
   iStaticClass* StaticClass = new clNativeStaticClass<iStringsApplet_Tunneller>;

   StaticClass->Env = Env;

#if !defined(_DISABLE_METHODS_)
   REG_CLS_MTD( iStringsApplet,TestReturnString )
#endif // _DISABLE_METHODS_
   StaticClass->SetSuperClassName( "iApplet" );

   Env->Linker->RegisterStaticClass( StaticClass );
#endif // _DISABLE_TUNNELLERS_
}
         // Class: iIntrusiveCounter
         // Class: iObject
         // Class: iApplet
         // Class: iStringsApplet
            // Adding abstract: TestReturnString
      // Abstract method: TestReturnString

void RegisterPackageLinderdaumCoreClass303(sEnvironment* Env)
{
   iStaticClass* StaticClass = new clNativeAbstractStaticClass<iStringsApplet>;

   StaticClass->Env = Env;

#if !defined(_DISABLE_METHODS_)
   REG_CLS_MTD( iStringsApplet,TestReturnString )
#endif // _DISABLE_METHODS_
   StaticClass->SetSuperClassName( "iApplet" );

   Env->Linker->RegisterStaticClass( StaticClass );
}

#include "iTestApplet_Tunneller.h"

void RegisterPackageLinderdaumCoreClass304(sEnvironment* Env)
{
#if !defined(_DISABLE_TUNNELLERS_)
   iStaticClass* StaticClass = new clNativeStaticClass<iTestApplet_Tunneller>;

   StaticClass->Env = Env;

#if !defined(_DISABLE_METHODS_)
   #define _RM__(Mtd) REG_CLS_MTD(iTestApplet,Mtd)
   _RM__(TestReturnIntRefByRef)
   _RM__(TestReturnInt)
   _RM__(TestReturnIntRef)
   _RM__(TestReturnString)
   _RM__(TestReturnStringRef)
   _RM__(TestReturnStringPtr)
   _RM__(TestCreateClient)
   _RM__(TestSaySomething)
   _RM__(TestReturnStringArg)
   _RM__(TestString_ByValue)
   _RM__(TestString_ByRef)
   _RM__(TestString_ByConstRef)
   _RM__(TestString_ByPtr)
   _RM__(TestState)
   #undef _RM__
#endif // _DISABLE_METHODS_
   StaticClass->SetSuperClassName( "iApplet" );

   Env->Linker->RegisterStaticClass( StaticClass );
#endif // _DISABLE_TUNNELLERS_
}
         // Class: iIntrusiveCounter
         // Class: iObject
         // Class: iApplet
         // Class: iTestApplet
            // Adding abstract: TestReturnIntRefByRef
            // Adding abstract: TestReturnInt
            // Adding abstract: TestReturnIntRef
            // Adding abstract: TestReturnString
            // Adding abstract: TestReturnStringRef
            // Adding abstract: TestReturnStringPtr
            // Adding abstract: TestCreateClient
            // Adding abstract: TestSaySomething
            // Adding abstract: TestReturnStringArg
            // Adding abstract: TestString_ByValue
            // Adding abstract: TestString_ByRef
            // Adding abstract: TestString_ByConstRef
            // Adding abstract: TestString_ByPtr
            // Adding abstract: TestState
      // Abstract method: TestReturnIntRefByRef
      // Abstract method: TestReturnInt
      // Abstract method: TestReturnIntRef
      // Abstract method: TestReturnString
      // Abstract method: TestReturnStringRef
      // Abstract method: TestReturnStringPtr
      // Abstract method: TestCreateClient
      // Abstract method: TestSaySomething
      // Abstract method: TestReturnStringArg
      // Abstract method: TestString_ByValue
      // Abstract method: TestString_ByRef
      // Abstract method: TestString_ByConstRef
      // Abstract method: TestString_ByPtr
      // Abstract method: TestState

void RegisterPackageLinderdaumCoreClass305(sEnvironment* Env)
{
   iStaticClass* StaticClass = new clNativeAbstractStaticClass<iTestApplet>;

   StaticClass->Env = Env;

#if !defined(_DISABLE_METHODS_)
   #define _RM__(Mtd) REG_CLS_MTD(iTestApplet,Mtd)
   _RM__(TestReturnIntRefByRef)
   _RM__(TestReturnInt)
   _RM__(TestReturnIntRef)
   _RM__(TestReturnString)
   _RM__(TestReturnStringRef)
   _RM__(TestReturnStringPtr)
   _RM__(TestCreateClient)
   _RM__(TestSaySomething)
   _RM__(TestReturnStringArg)
   _RM__(TestString_ByValue)
   _RM__(TestString_ByRef)
   _RM__(TestString_ByConstRef)
   _RM__(TestString_ByPtr)
   _RM__(TestState)
   #undef _RM__
#endif // _DISABLE_METHODS_
   StaticClass->SetSuperClassName( "iApplet" );

   Env->Linker->RegisterStaticClass( StaticClass );
}

#undef REG_CLS_MTD

/*
 * 16/01/2012
     Autogenerated via LinderScript Database Compiler 0.9.24
*/
