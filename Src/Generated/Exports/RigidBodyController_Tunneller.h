/**
 * \file RigidBodyController_Tunneller.h
 * \brief Tunneller for class: RigidBodyController
 * \version 0.6.06
 * \date 16/01/2012
 * \author Sergey Kosarevsky, 2005-2011
 * \author Viktor Latypov, 2007-2011
 * \author support@linderdaum.com http://www.linderdaum.com
 */

//                             Base class: iObject  (public)

#ifndef _RigidBodyController_Tunneller_
#define _RigidBodyController_Tunneller_

#include "Linderdaum/Physics/BodyControllers.h"

#if !defined( _DISABLE_TUNNELLERS_ )

class RigidBodyController_Tunneller: public RigidBodyController
{
public:
   //
   // iObject interface
   //
      /*
            The interface of this class was marked as "native final".
            LSDC bypassed generation of stubs for it - only pure virtual methods are generated.
      */
   //
   // RigidBodyController interface
   //
   virtual void    Reset()
   {
      if ( !iObject::FInheritedCall && iObject::IsMethodOverriden( "Reset" ) )
      {
         clParametersList Params;

         bool MethodCalled = iObject::CallMethod( "Reset", Params, iObject::FInheritedCall );

         if ( !MethodCalled ) RigidBodyController::Reset();

         return;
      }

      RigidBodyController::Reset();
   }
   virtual void    Update(float P0)
   {
      if ( !iObject::FInheritedCall && iObject::IsMethodOverriden( "Update" ) )
      {
         clParametersList Params;

         ParameterType<float>::Type Param0;

         Param0.ReadValue( &P0 );

         Params.push_back( &Param0 );

         bool MethodCalled = iObject::CallMethod( "Update", Params, iObject::FInheritedCall );

         if ( !MethodCalled ) RigidBodyController::Update(P0);

         return;
      }

      RigidBodyController::Update(P0);
   }
   virtual void    ApplyToBody()
   {
      if ( !iObject::FInheritedCall && iObject::IsMethodOverriden( "ApplyToBody" ) )
      {
         clParametersList Params;

         bool MethodCalled = iObject::CallMethod( "ApplyToBody", Params, iObject::FInheritedCall );

         if ( !MethodCalled ) RigidBodyController::ApplyToBody();

         return;
      }

      RigidBodyController::ApplyToBody();
   }
   virtual void    SetInputDevice(iInputDevice* P0)
   {
      if ( !iObject::FInheritedCall && iObject::IsMethodOverriden( "SetInputDevice" ) )
      {
         clParametersList Params;

         ParameterType<iInputDevice*>::Type Param0;

         Param0.ReadValue( &P0 );

         Params.push_back( &Param0 );

         bool MethodCalled = iObject::CallMethod( "SetInputDevice", Params, iObject::FInheritedCall );

         if ( !MethodCalled ) RigidBodyController::SetInputDevice(P0);

         return;
      }

      RigidBodyController::SetInputDevice(P0);
   }
};

#endif // _DISABLE_TUNNELLERS_

#endif

/*
 * 16/01/2012
     Autogenerated via LinderScript Database Compiler 0.9.24
*/
