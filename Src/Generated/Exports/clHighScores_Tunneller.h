/**
 * \file clHighScores_Tunneller.h
 * \brief Tunneller for class: clHighScores
 * \version 0.6.06
 * \date 16/01/2012
 * \author Sergey Kosarevsky, 2005-2011
 * \author Viktor Latypov, 2007-2011
 * \author support@linderdaum.com http://www.linderdaum.com
 */

//                             Base class: iObject  (public)

#ifndef _clHighScores_Tunneller_
#define _clHighScores_Tunneller_

#include "Linderdaum/World/HighScores.h"

#if !defined( _DISABLE_TUNNELLERS_ )

class clHighScores_Tunneller: public clHighScores
{
public:
   //
   // iObject interface
   //
      /*
            The interface of this class was marked as "native final".
            LSDC bypassed generation of stubs for it - only pure virtual methods are generated.
      */
   //
   // clHighScores interface
   //
   virtual bool    SaveToStream(iOStream* P0) const
   {
      if ( !iObject::FInheritedCall && iObject::IsMethodOverriden( "SaveToStream" ) )
      {
         clParametersList Params;

         ParameterType<iOStream*>::Type Param0;

         Param0.ReadValue( &P0 );

         Params.push_back( &Param0 );

         bool MethodCalled = iObject::CallMethod( "SaveToStream", Params, iObject::FInheritedCall );

         if ( !MethodCalled ) return clHighScores::SaveToStream(P0);

         return *(TypeTraits< bool >::ReferredType*)iObject::GetReturnValue()->GetNativeBlock();
      }

      return clHighScores::SaveToStream(P0);
   }
   virtual bool    LoadFromStream(iIStream* P0)
   {
      if ( !iObject::FInheritedCall && iObject::IsMethodOverriden( "LoadFromStream" ) )
      {
         clParametersList Params;

         ParameterType<iIStream*>::Type Param0;

         Param0.ReadValue( &P0 );

         Params.push_back( &Param0 );

         bool MethodCalled = iObject::CallMethod( "LoadFromStream", Params, iObject::FInheritedCall );

         if ( !MethodCalled ) return clHighScores::LoadFromStream(P0);

         return *(TypeTraits< bool >::ReferredType*)iObject::GetReturnValue()->GetNativeBlock();
      }

      return clHighScores::LoadFromStream(P0);
   }
   virtual size_t    UpdateHighScores(int P0, int P1)
   {
      if ( !iObject::FInheritedCall && iObject::IsMethodOverriden( "UpdateHighScores" ) )
      {
         clParametersList Params;

         ParameterType<int>::Type Param0;
         ParameterType<int>::Type Param1;

         Param0.ReadValue( &P0 );
         Param1.ReadValue( &P1 );

         Params.push_back( &Param0 );
         Params.push_back( &Param1 );

         bool MethodCalled = iObject::CallMethod( "UpdateHighScores", Params, iObject::FInheritedCall );

         if ( !MethodCalled ) return clHighScores::UpdateHighScores(P0, P1);

         return *(TypeTraits< size_t >::ReferredType*)iObject::GetReturnValue()->GetNativeBlock();
      }

      return clHighScores::UpdateHighScores(P0, P1);
   }
   virtual size_t    GetNumEntries() const
   {
      if ( !iObject::FInheritedCall && iObject::IsMethodOverriden( "GetNumEntries" ) )
      {
         clParametersList Params;

         bool MethodCalled = iObject::CallMethod( "GetNumEntries", Params, iObject::FInheritedCall );

         if ( !MethodCalled ) return clHighScores::GetNumEntries();

         return *(TypeTraits< size_t >::ReferredType*)iObject::GetReturnValue()->GetNativeBlock();
      }

      return clHighScores::GetNumEntries();
   }
   virtual sHighScoreRec    GetEntry(size_t P0) const
   {
      if ( !iObject::FInheritedCall && iObject::IsMethodOverriden( "GetEntry" ) )
      {
         clParametersList Params;

         ParameterType<size_t>::Type Param0;

         Param0.ReadValue( &P0 );

         Params.push_back( &Param0 );

         bool MethodCalled = iObject::CallMethod( "GetEntry", Params, iObject::FInheritedCall );

         if ( !MethodCalled ) return clHighScores::GetEntry(P0);

         return *(TypeTraits< sHighScoreRec >::ReferredType*)iObject::GetReturnValue()->GetNativeBlock();
      }

      return clHighScores::GetEntry(P0);
   }
   virtual void    Clear(size_t P0)
   {
      if ( !iObject::FInheritedCall && iObject::IsMethodOverriden( "Clear" ) )
      {
         clParametersList Params;

         ParameterType<size_t>::Type Param0;

         Param0.ReadValue( &P0 );

         Params.push_back( &Param0 );

         bool MethodCalled = iObject::CallMethod( "Clear", Params, iObject::FInheritedCall );

         if ( !MethodCalled ) clHighScores::Clear(P0);

         return;
      }

      clHighScores::Clear(P0);
   }
};

#endif // _DISABLE_TUNNELLERS_

#endif

/*
 * 16/01/2012
     Autogenerated via LinderScript Database Compiler 0.9.24
*/
