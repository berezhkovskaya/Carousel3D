/**
 * \file iCameraPositioner_Tunneller.h
 * \brief Tunneller for class: iCameraPositioner
 * \version 0.6.06
 * \date 16/01/2012
 * \author Sergey Kosarevsky, 2005-2011
 * \author Viktor Latypov, 2007-2011
 * \author support@linderdaum.com http://www.linderdaum.com
 */

//                             Base class: iObject  (public)

#ifndef _iCameraPositioner_Tunneller_
#define _iCameraPositioner_Tunneller_

#include "Linderdaum/VisualScene/CameraPositioner.h"

#if !defined( _DISABLE_TUNNELLERS_ )

class iCameraPositioner_Tunneller: public iCameraPositioner
{
public:
   //
   // iObject interface
   //
      /*
            The interface of this class was marked as "native final".
            LSDC bypassed generation of stubs for it - only pure virtual methods are generated.
      */
   //
   // iCameraPositioner interface
   //
   virtual void    Register()
   {
      if ( !iObject::FInheritedCall && iObject::IsMethodOverriden( "Register" ) )
      {
         clParametersList Params;

         bool MethodCalled = iObject::CallMethod( "Register", Params, iObject::FInheritedCall );

         if ( !MethodCalled ) iCameraPositioner::Register();

         return;
      }

      iCameraPositioner::Register();
   }
   virtual void    Unregister()
   {
      if ( !iObject::FInheritedCall && iObject::IsMethodOverriden( "Unregister" ) )
      {
         clParametersList Params;

         bool MethodCalled = iObject::CallMethod( "Unregister", Params, iObject::FInheritedCall );

         if ( !MethodCalled ) iCameraPositioner::Unregister();

         return;
      }

      iCameraPositioner::Unregister();
   }
   virtual void    Update(float P0)
   {
      if ( !iObject::FInheritedCall && iObject::IsMethodOverriden( "Update" ) )
      {
         clParametersList Params;

         ParameterType<float>::Type Param0;

         Param0.ReadValue( &P0 );

         Params.push_back( &Param0 );

         bool MethodCalled = iObject::CallMethod( "Update", Params, iObject::FInheritedCall );

         if ( !MethodCalled ) FATAL_MSG("Abstract method called: iCameraPositioner::Update()")

         return;
      }

      FATAL_MSG("Abstract method called: iCameraPositioner::Update()")
   }
   virtual void    HandleKey(int P0, bool P1)
   {
      if ( !iObject::FInheritedCall && iObject::IsMethodOverriden( "HandleKey" ) )
      {
         clParametersList Params;

         ParameterType<int>::Type Param0;
         ParameterType<bool>::Type Param1;

         Param0.ReadValue( &P0 );
         Param1.ReadValue( &P1 );

         Params.push_back( &Param0 );
         Params.push_back( &Param1 );

         bool MethodCalled = iObject::CallMethod( "HandleKey", Params, iObject::FInheritedCall );

         if ( !MethodCalled ) iCameraPositioner::HandleKey(P0, P1);

         return;
      }

      iCameraPositioner::HandleKey(P0, P1);
   }
   virtual const LMatrix4&    GetCurrentTransform() const
   {
      if ( !iObject::FInheritedCall && iObject::IsMethodOverriden( "GetCurrentTransform" ) )
      {
         clParametersList Params;

         bool MethodCalled = iObject::CallMethod( "GetCurrentTransform", Params, iObject::FInheritedCall );

         if ( !MethodCalled ) return iCameraPositioner::GetCurrentTransform();

         return *(TypeTraits< const LMatrix4& >::ReferredType*)iObject::GetReturnValue()->GetNativeBlock();
      }

      return iCameraPositioner::GetCurrentTransform();
   }
};

#endif // _DISABLE_TUNNELLERS_

#endif

/*
 * 16/01/2012
     Autogenerated via LinderScript Database Compiler 0.9.24
*/
