
// Autogenerated by ALExtractor 0.5.92 (C) Sergey Kosarevsky
// Part of Linderdaum Engine
// http://www.linderdaum.com


#include "LAL.h"

#include "Engine.h"
#include "Utils/Library.h"

#if !defined( OS_ANDROID )
LPALENABLE                 alEnable;
LPALDISABLE                alDisable;
LPALISENABLED              alIsEnabled;
LPALGETSTRING              alGetString;
LPALGETBOOLEANV            alGetBooleanv;
LPALGETINTEGERV            alGetIntegerv;
LPALGETFLOATV              alGetFloatv;
LPALGETDOUBLEV             alGetDoublev;
LPALGETBOOLEAN             alGetBoolean;
LPALGETINTEGER             alGetInteger;
LPALGETFLOAT               alGetFloat;
LPALGETDOUBLE              alGetDouble;
LPALGETERROR               alGetError;
LPALISEXTENSIONPRESENT     alIsExtensionPresent;
LPALGETPROCADDRESS         alGetProcAddress;
LPALGETENUMVALUE           alGetEnumValue;
LPALLISTENERF              alListenerf;
LPALLISTENER3F             alListener3f;
LPALLISTENERFV             alListenerfv;
LPALLISTENERI              alListeneri;
LPALLISTENER3I             alListener3i;
LPALLISTENERIV             alListeneriv;
LPALGETLISTENERF           alGetListenerf;
LPALGETLISTENER3F          alGetListener3f;
LPALGETLISTENERFV          alGetListenerfv;
LPALGETLISTENERI           alGetListeneri;
LPALGETLISTENER3I          alGetListener3i;
LPALGETLISTENERIV          alGetListeneriv;
LPALGENSOURCES             alGenSources;
LPALDELETESOURCES          alDeleteSources;
LPALISSOURCE               alIsSource;
LPALSOURCEF                alSourcef;
LPALSOURCE3F               alSource3f;
LPALSOURCEFV               alSourcefv;
LPALSOURCEI                alSourcei;
LPALSOURCE3I               alSource3i;
LPALSOURCEIV               alSourceiv;
LPALGETSOURCEF             alGetSourcef;
LPALGETSOURCE3F            alGetSource3f;
LPALGETSOURCEFV            alGetSourcefv;
LPALGETSOURCEI             alGetSourcei;
LPALGETSOURCE3I            alGetSource3i;
LPALGETSOURCEIV            alGetSourceiv;
LPALSOURCEPLAYV            alSourcePlayv;
LPALSOURCESTOPV            alSourceStopv;
LPALSOURCEREWINDV          alSourceRewindv;
LPALSOURCEPAUSEV           alSourcePausev;
LPALSOURCEPLAY             alSourcePlay;
LPALSOURCESTOP             alSourceStop;
LPALSOURCEREWIND           alSourceRewind;
LPALSOURCEPAUSE            alSourcePause;
LPALSOURCEQUEUEBUFFERS     alSourceQueueBuffers;
LPALSOURCEUNQUEUEBUFFERS   alSourceUnqueueBuffers;
LPALGENBUFFERS             alGenBuffers;
LPALDELETEBUFFERS          alDeleteBuffers;
LPALISBUFFER               alIsBuffer;
LPALBUFFERDATA             alBufferData;
LPALBUFFERF                alBufferf;
LPALBUFFER3F               alBuffer3f;
LPALBUFFERFV               alBufferfv;
LPALBUFFERI                alBufferi;
LPALBUFFER3I               alBuffer3i;
LPALBUFFERIV               alBufferiv;
LPALGETBUFFERF             alGetBufferf;
LPALGETBUFFER3F            alGetBuffer3f;
LPALGETBUFFERFV            alGetBufferfv;
LPALGETBUFFERI             alGetBufferi;
LPALGETBUFFER3I            alGetBuffer3i;
LPALGETBUFFERIV            alGetBufferiv;
LPALDOPPLERFACTOR          alDopplerFactor;
LPALDOPPLERVELOCITY        alDopplerVelocity;
LPALSPEEDOFSOUND           alSpeedOfSound;
LPALDISTANCEMODEL          alDistanceModel;
LPALCCREATECONTEXT         alcCreateContext;
LPALCMAKECONTEXTCURRENT    alcMakeContextCurrent;
LPALCPROCESSCONTEXT        alcProcessContext;
LPALCSUSPENDCONTEXT        alcSuspendContext;
LPALCDESTROYCONTEXT        alcDestroyContext;
LPALCGETCURRENTCONTEXT     alcGetCurrentContext;
LPALCGETCONTEXTSDEVICE     alcGetContextsDevice;
LPALCOPENDEVICE            alcOpenDevice;
LPALCCLOSEDEVICE           alcCloseDevice;
LPALCGETERROR              alcGetError;
LPALCISEXTENSIONPRESENT    alcIsExtensionPresent;
LPALCGETPROCADDRESS        alcGetProcAddress;
LPALCGETENUMVALUE          alcGetEnumValue;
LPALCGETSTRING             alcGetString;
LPALCGETINTEGERV           alcGetIntegerv;
LPALCCAPTUREOPENDEVICE     alcCaptureOpenDevice;
LPALCCAPTURECLOSEDEVICE    alcCaptureCloseDevice;
LPALCCAPTURESTART          alcCaptureStart;
LPALCCAPTURESTOP           alcCaptureStop;
LPALCCAPTURESAMPLES        alcCaptureSamples;
#endif

LAL::clALExtRetriever::clALExtRetriever()
#if !defined( OS_ANDROID )
	: FLib( NULL )
#endif
{
}

void LAL::clALExtRetriever::Unload()
{
#if !defined( OS_ANDROID )
	delete( FLib );
#endif
}

bool LAL::clALExtRetriever::Reload()
{
#if !defined( OS_ANDROID )

	if ( !FLib )
	{
		FLib = new clLibrary();

		if ( !FLib->Load( "OpenAL32.dll" ) ) { return false; }
	}

	alEnable = ( LPALENABLE )FLib->GetProcAddress( "alEnable" );
	alDisable = ( LPALDISABLE )FLib->GetProcAddress( "alDisable" );
	alIsEnabled = ( LPALISENABLED )FLib->GetProcAddress( "alIsEnabled" );
	alGetString = ( LPALGETSTRING )FLib->GetProcAddress( "alGetString" );
	alGetBooleanv = ( LPALGETBOOLEANV )FLib->GetProcAddress( "alGetBooleanv" );
	alGetIntegerv = ( LPALGETINTEGERV )FLib->GetProcAddress( "alGetIntegerv" );
	alGetFloatv = ( LPALGETFLOATV )FLib->GetProcAddress( "alGetFloatv" );
	alGetDoublev = ( LPALGETDOUBLEV )FLib->GetProcAddress( "alGetDoublev" );
	alGetBoolean = ( LPALGETBOOLEAN )FLib->GetProcAddress( "alGetBoolean" );
	alGetInteger = ( LPALGETINTEGER )FLib->GetProcAddress( "alGetInteger" );
	alGetFloat = ( LPALGETFLOAT )FLib->GetProcAddress( "alGetFloat" );
	alGetDouble = ( LPALGETDOUBLE )FLib->GetProcAddress( "alGetDouble" );
	alGetError = ( LPALGETERROR )FLib->GetProcAddress( "alGetError" );
	alIsExtensionPresent = ( LPALISEXTENSIONPRESENT )FLib->GetProcAddress( "alIsExtensionPresent" );
	alGetProcAddress = ( LPALGETPROCADDRESS )FLib->GetProcAddress( "alGetProcAddress" );
	alGetEnumValue = ( LPALGETENUMVALUE )FLib->GetProcAddress( "alGetEnumValue" );
	alListenerf = ( LPALLISTENERF )FLib->GetProcAddress( "alListenerf" );
	alListener3f = ( LPALLISTENER3F )FLib->GetProcAddress( "alListener3f" );
	alListenerfv = ( LPALLISTENERFV )FLib->GetProcAddress( "alListenerfv" );
	alListeneri = ( LPALLISTENERI )FLib->GetProcAddress( "alListeneri" );
	alListener3i = ( LPALLISTENER3I )FLib->GetProcAddress( "alListener3i" );
	alListeneriv = ( LPALLISTENERIV )FLib->GetProcAddress( "alListeneriv" );
	alGetListenerf = ( LPALGETLISTENERF )FLib->GetProcAddress( "alGetListenerf" );
	alGetListener3f = ( LPALGETLISTENER3F )FLib->GetProcAddress( "alGetListener3f" );
	alGetListenerfv = ( LPALGETLISTENERFV )FLib->GetProcAddress( "alGetListenerfv" );
	alGetListeneri = ( LPALGETLISTENERI )FLib->GetProcAddress( "alGetListeneri" );
	alGetListener3i = ( LPALGETLISTENER3I )FLib->GetProcAddress( "alGetListener3i" );
	alGetListeneriv = ( LPALGETLISTENERIV )FLib->GetProcAddress( "alGetListeneriv" );
	alGenSources = ( LPALGENSOURCES )FLib->GetProcAddress( "alGenSources" );
	alDeleteSources = ( LPALDELETESOURCES )FLib->GetProcAddress( "alDeleteSources" );
	alIsSource = ( LPALISSOURCE )FLib->GetProcAddress( "alIsSource" );
	alSourcef = ( LPALSOURCEF )FLib->GetProcAddress( "alSourcef" );
	alSource3f = ( LPALSOURCE3F )FLib->GetProcAddress( "alSource3f" );
	alSourcefv = ( LPALSOURCEFV )FLib->GetProcAddress( "alSourcefv" );
	alSourcei = ( LPALSOURCEI )FLib->GetProcAddress( "alSourcei" );
	alSource3i = ( LPALSOURCE3I )FLib->GetProcAddress( "alSource3i" );
	alSourceiv = ( LPALSOURCEIV )FLib->GetProcAddress( "alSourceiv" );
	alGetSourcef = ( LPALGETSOURCEF )FLib->GetProcAddress( "alGetSourcef" );
	alGetSource3f = ( LPALGETSOURCE3F )FLib->GetProcAddress( "alGetSource3f" );
	alGetSourcefv = ( LPALGETSOURCEFV )FLib->GetProcAddress( "alGetSourcefv" );
	alGetSourcei = ( LPALGETSOURCEI )FLib->GetProcAddress( "alGetSourcei" );
	alGetSource3i = ( LPALGETSOURCE3I )FLib->GetProcAddress( "alGetSource3i" );
	alGetSourceiv = ( LPALGETSOURCEIV )FLib->GetProcAddress( "alGetSourceiv" );
	alSourcePlayv = ( LPALSOURCEPLAYV )FLib->GetProcAddress( "alSourcePlayv" );
	alSourceStopv = ( LPALSOURCESTOPV )FLib->GetProcAddress( "alSourceStopv" );
	alSourceRewindv = ( LPALSOURCEREWINDV )FLib->GetProcAddress( "alSourceRewindv" );
	alSourcePausev = ( LPALSOURCEPAUSEV )FLib->GetProcAddress( "alSourcePausev" );
	alSourcePlay = ( LPALSOURCEPLAY )FLib->GetProcAddress( "alSourcePlay" );
	alSourceStop = ( LPALSOURCESTOP )FLib->GetProcAddress( "alSourceStop" );
	alSourceRewind = ( LPALSOURCEREWIND )FLib->GetProcAddress( "alSourceRewind" );
	alSourcePause = ( LPALSOURCEPAUSE )FLib->GetProcAddress( "alSourcePause" );
	alSourceQueueBuffers = ( LPALSOURCEQUEUEBUFFERS )FLib->GetProcAddress( "alSourceQueueBuffers" );
	alSourceUnqueueBuffers = ( LPALSOURCEUNQUEUEBUFFERS )FLib->GetProcAddress( "alSourceUnqueueBuffers" );
	alGenBuffers = ( LPALGENBUFFERS )FLib->GetProcAddress( "alGenBuffers" );
	alDeleteBuffers = ( LPALDELETEBUFFERS )FLib->GetProcAddress( "alDeleteBuffers" );
	alIsBuffer = ( LPALISBUFFER )FLib->GetProcAddress( "alIsBuffer" );
	alBufferData = ( LPALBUFFERDATA )FLib->GetProcAddress( "alBufferData" );
	alBufferf = ( LPALBUFFERF )FLib->GetProcAddress( "alBufferf" );
	alBuffer3f = ( LPALBUFFER3F )FLib->GetProcAddress( "alBuffer3f" );
	alBufferfv = ( LPALBUFFERFV )FLib->GetProcAddress( "alBufferfv" );
	alBufferi = ( LPALBUFFERI )FLib->GetProcAddress( "alBufferi" );
	alBuffer3i = ( LPALBUFFER3I )FLib->GetProcAddress( "alBuffer3i" );
	alBufferiv = ( LPALBUFFERIV )FLib->GetProcAddress( "alBufferiv" );
	alGetBufferf = ( LPALGETBUFFERF )FLib->GetProcAddress( "alGetBufferf" );
	alGetBuffer3f = ( LPALGETBUFFER3F )FLib->GetProcAddress( "alGetBuffer3f" );
	alGetBufferfv = ( LPALGETBUFFERFV )FLib->GetProcAddress( "alGetBufferfv" );
	alGetBufferi = ( LPALGETBUFFERI )FLib->GetProcAddress( "alGetBufferi" );
	alGetBuffer3i = ( LPALGETBUFFER3I )FLib->GetProcAddress( "alGetBuffer3i" );
	alGetBufferiv = ( LPALGETBUFFERIV )FLib->GetProcAddress( "alGetBufferiv" );
	alDopplerFactor = ( LPALDOPPLERFACTOR )FLib->GetProcAddress( "alDopplerFactor" );
	alDopplerVelocity = ( LPALDOPPLERVELOCITY )FLib->GetProcAddress( "alDopplerVelocity" );
	alSpeedOfSound = ( LPALSPEEDOFSOUND )FLib->GetProcAddress( "alSpeedOfSound" );
	alDistanceModel = ( LPALDISTANCEMODEL )FLib->GetProcAddress( "alDistanceModel" );
	alcCreateContext = ( LPALCCREATECONTEXT )FLib->GetProcAddress( "alcCreateContext" );
	alcMakeContextCurrent = ( LPALCMAKECONTEXTCURRENT )FLib->GetProcAddress( "alcMakeContextCurrent" );
	alcProcessContext = ( LPALCPROCESSCONTEXT )FLib->GetProcAddress( "alcProcessContext" );
	alcSuspendContext = ( LPALCSUSPENDCONTEXT )FLib->GetProcAddress( "alcSuspendContext" );
	alcDestroyContext = ( LPALCDESTROYCONTEXT )FLib->GetProcAddress( "alcDestroyContext" );
	alcGetCurrentContext = ( LPALCGETCURRENTCONTEXT )FLib->GetProcAddress( "alcGetCurrentContext" );
	alcGetContextsDevice = ( LPALCGETCONTEXTSDEVICE )FLib->GetProcAddress( "alcGetContextsDevice" );
	alcOpenDevice = ( LPALCOPENDEVICE )FLib->GetProcAddress( "alcOpenDevice" );
	alcCloseDevice = ( LPALCCLOSEDEVICE )FLib->GetProcAddress( "alcCloseDevice" );
	alcGetError = ( LPALCGETERROR )FLib->GetProcAddress( "alcGetError" );
	alcIsExtensionPresent = ( LPALCISEXTENSIONPRESENT )FLib->GetProcAddress( "alcIsExtensionPresent" );
	alcGetProcAddress = ( LPALCGETPROCADDRESS )FLib->GetProcAddress( "alcGetProcAddress" );
	alcGetEnumValue = ( LPALCGETENUMVALUE )FLib->GetProcAddress( "alcGetEnumValue" );
	alcGetString = ( LPALCGETSTRING )FLib->GetProcAddress( "alcGetString" );
	alcGetIntegerv = ( LPALCGETINTEGERV )FLib->GetProcAddress( "alcGetIntegerv" );
	alcCaptureOpenDevice = ( LPALCCAPTUREOPENDEVICE )FLib->GetProcAddress( "alcCaptureOpenDevice" );
	alcCaptureCloseDevice = ( LPALCCAPTURECLOSEDEVICE )FLib->GetProcAddress( "alcCaptureCloseDevice" );
	alcCaptureStart = ( LPALCCAPTURESTART )FLib->GetProcAddress( "alcCaptureStart" );
	alcCaptureStop = ( LPALCCAPTURESTOP )FLib->GetProcAddress( "alcCaptureStop" );
	alcCaptureSamples = ( LPALCCAPTURESAMPLES )FLib->GetProcAddress( "alcCaptureSamples" );
#endif

	return true;
}

/*
 * 25/07/2010
     Initial generation
*/
