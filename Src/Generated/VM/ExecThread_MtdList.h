// autogenerated by op_processor, do not modify !
public:
void Opcode_INVALID();
void Opcode_NOP();
void Opcode_HLT();
void Opcode_SOURCE_POS();
void Opcode_PUSH_REF();
void Opcode_PUSH_BYTE();
void Opcode_PUSH_INT();
void Opcode_PUSH_DOUBLE();
void Opcode_PUSH_FLOAT();
void Opcode_PUSH_BOOL();
void Opcode_LOAD_STRING_CONST();
void Opcode_LOAD_STR();
void Opcode_LOAD_INT();
void Opcode_LOAD_BOOL();
void Opcode_LOAD_BYTE();
void Opcode_LOAD_FLOAT();
void Opcode_LOAD_DOUBLE();
void Opcode_SLOAD_INT();
void Opcode_SLOAD_FLOAT();
void Opcode_SLOAD_INT_IMM();
void Opcode_SLOAD_FLOAT_IMM();
void Opcode_LOAD_BYTES();
void Opcode_REPLICATE_STACK_TOP();
void Opcode_PUSH_BYTES();
void Opcode_POP_BYTES();
void Opcode_LOAD_SELF();
void Opcode_STACK_INFO();
void Opcode_INSPECT_TOP_INT();
void Opcode_INSPECT_TOP_FLT();
void Opcode_INSPECT_TOP_PTR();
void Opcode_INSPECT_TOP_OBJ();
void Opcode_INSPECT_TOP_STR();
void Opcode_RESIZE();
void Opcode_DISP_BYTE();
void Opcode_DISP_INT();
void Opcode_DISP_DOUBLE();
void Opcode_DISP_FLOAT();
void Opcode_DISP_STRING();
void Opcode_FEED_LINE();
void Opcode_CVT_INT_TO_BOOL();
void Opcode_CVT_INT_TO_FLT();
void Opcode_CVT_INT_TO_DBL();
void Opcode_CVT_INT_TO_BYTE();
void Opcode_CVT_BOOL_TO_INT();
void Opcode_CVT_BOOL_TO_FLT();
void Opcode_CVT_BOOL_TO_DBL();
void Opcode_CVT_BOOL_TO_BYTE();
void Opcode_CVT_FLT_TO_INT();
void Opcode_CVT_FLT_TO_DBL();
void Opcode_CVT_FLT_TO_BOOL();
void Opcode_CVT_FLT_TO_BYTE();
void Opcode_CVT_DBL_TO_INT();
void Opcode_CVT_DBL_TO_FLT();
void Opcode_CVT_DBL_TO_BOOL();
void Opcode_CVT_DBL_TO_BYTE();
void Opcode_CVT_BYTE_TO_INT();
void Opcode_CVT_BYTE_TO_FLT();
void Opcode_CVT_BYTE_TO_BOOL();
void Opcode_CVT_BYTE_TO_DBL();
void Opcode_CONVERT_FLT_TO_STR();
void Opcode_CONVERT_DBL_TO_STR();
void Opcode_CONVERT_INT_TO_STR();
void Opcode_CALL_STATIC_METHOD();
void Opcode_CALL_METHOD();
void Opcode_INHERITED_CALL();
void Opcode_INSTANTIATE();
void Opcode_RETURN();
void Opcode_LATENT_RETURN();
void Opcode_JMP();
void Opcode_JMP_IF();
void Opcode_JMP_IF_NOT();
void Opcode_DECLARE();
void Opcode_UNDECLARE();
void Opcode_EQUAL_STRING_STRING();
void Opcode_ADD_STRING_STRING();
void Opcode_LOAD_LOCAL_VAR();
void Opcode_LOAD_PARAM_ADDRESS();
void Opcode_LOAD_LOCAL_VAR_ADDRESS();
void Opcode_LOAD_GLOBAL_VAR_ADDRESS();
void Opcode_LOAD_EFFECTIVE_ADDRESS();
void Opcode_LOAD_CLASS_FIELD_ADDRESS();
void Opcode_ADD_OFFSET();
void Opcode_LOAD_VAL_FROM_CUR_ADDR();
void Opcode_MAKE_REF_ASSIGNMENT();
void Opcode_LOAD_CLASS_REFERENCE();
void Opcode_ADD_INT_TO_INT();
void Opcode_ADD_INT_TO_FLT();
void Opcode_ADD_INT_TO_DBL();
void Opcode_ADD_FLT_TO_INT();
void Opcode_ADD_FLT_TO_FLT();
void Opcode_ADD_FLT_TO_DBL();
void Opcode_ADD_DBL_TO_INT();
void Opcode_ADD_DBL_TO_FLT();
void Opcode_ADD_DBL_TO_DBL();
void Opcode_MUL_INT_BY_INT();
void Opcode_MUL_INT_BY_FLT();
void Opcode_MUL_INT_BY_DBL();
void Opcode_MUL_FLT_BY_INT();
void Opcode_MUL_FLT_BY_FLT();
void Opcode_MUL_FLT_BY_DBL();
void Opcode_MUL_DBL_BY_INT();
void Opcode_MUL_DBL_BY_FLT();
void Opcode_MUL_DBL_BY_DBL();
void Opcode_DIV_INT_BY_INT();
void Opcode_DIV_INT_BY_FLT();
void Opcode_DIV_INT_BY_DBL();
void Opcode_DIV_FLT_BY_INT();
void Opcode_DIV_FLT_BY_FLT();
void Opcode_DIV_FLT_BY_DBL();
void Opcode_DIV_DBL_BY_INT();
void Opcode_DIV_DBL_BY_FLT();
void Opcode_DIV_DBL_BY_DBL();
void Opcode_SUB_INT_FROM_INT();
void Opcode_SUB_INT_FROM_FLT();
void Opcode_SUB_INT_FROM_DBL();
void Opcode_SUB_FLT_FROM_INT();
void Opcode_SUB_FLT_FROM_FLT();
void Opcode_SUB_FLT_FROM_DBL();
void Opcode_SUB_DBL_FROM_INT();
void Opcode_SUB_DBL_FROM_FLT();
void Opcode_SUB_DBL_FROM_DBL();
void Opcode_COMPARE_INT_INT();
void Opcode_COMPARE_INT_FLT();
void Opcode_COMPARE_INT_DBL();
void Opcode_COMPARE_FLT_INT();
void Opcode_COMPARE_FLT_FLT();
void Opcode_COMPARE_FLT_DBL();
void Opcode_COMPARE_DBL_INT();
void Opcode_COMPARE_DBL_FLT();
void Opcode_COMPARE_DBL_DBL();
void Opcode_COMPARE_NOT_INT_INT();
void Opcode_COMPARE_NOT_INT_FLT();
void Opcode_COMPARE_NOT_INT_DBL();
void Opcode_COMPARE_NOT_FLT_INT();
void Opcode_COMPARE_NOT_FLT_FLT();
void Opcode_COMPARE_NOT_FLT_DBL();
void Opcode_COMPARE_NOT_DBL_INT();
void Opcode_COMPARE_NOT_DBL_FLT();
void Opcode_COMPARE_NOT_DBL_DBL();
void Opcode_GE_INT_INT();
void Opcode_GE_INT_FLT();
void Opcode_GE_INT_DBL();
void Opcode_GE_FLT_INT();
void Opcode_GE_FLT_FLT();
void Opcode_GE_FLT_DBL();
void Opcode_GE_DBL_INT();
void Opcode_GE_DBL_FLT();
void Opcode_GE_DBL_DBL();
void Opcode_LE_INT_INT();
void Opcode_LE_INT_FLT();
void Opcode_LE_INT_DBL();
void Opcode_LE_FLT_INT();
void Opcode_LE_FLT_FLT();
void Opcode_LE_FLT_DBL();
void Opcode_LE_DBL_INT();
void Opcode_LE_DBL_FLT();
void Opcode_LE_DBL_DBL();
void Opcode_GREATER_INT_INT();
void Opcode_GREATER_INT_FLT();
void Opcode_GREATER_INT_DBL();
void Opcode_GREATER_FLT_INT();
void Opcode_GREATER_FLT_FLT();
void Opcode_GREATER_FLT_DBL();
void Opcode_GREATER_DBL_INT();
void Opcode_GREATER_DBL_FLT();
void Opcode_GREATER_DBL_DBL();
void Opcode_LESSER_INT_INT();
void Opcode_LESSER_INT_FLT();
void Opcode_LESSER_INT_DBL();
void Opcode_LESSER_FLT_INT();
void Opcode_LESSER_FLT_FLT();
void Opcode_LESSER_FLT_DBL();
void Opcode_LESSER_DBL_INT();
void Opcode_LESSER_DBL_FLT();
void Opcode_LESSER_DBL_DBL();
void Opcode_INC_INT();
void Opcode_INC_FLOAT();
void Opcode_INC_DOUBLE();
void Opcode_DEC_INT();
void Opcode_DEC_FLOAT();
void Opcode_DEC_DOUBLE();
void Opcode_NEG_INT();
void Opcode_NEG_FLT();
void Opcode_NEG_DBL();
void Opcode_NOT_INT();
void Opcode_NOT_FLT();
void Opcode_NOT_DBL();
void Opcode_PLUS_INT();
void Opcode_PLUS_FLT();
void Opcode_PLUS_DBL();
void Opcode_NOT_BOOL();
void Opcode_AND_BOOL_BOOL();
void Opcode_OR_BOOL_BOOL();
void Opcode_XOR_BOOL_BOOL();
void Opcode_MOD_INT_INT();
void Opcode_ADD_INT_INT();
void Opcode_ADD_INT_FLT();
void Opcode_ADD_INT_DBL();
void Opcode_ADD_FLT_INT();
void Opcode_ADD_FLT_FLT();
void Opcode_ADD_FLT_DBL();
void Opcode_ADD_DBL_INT();
void Opcode_ADD_DBL_FLT();
void Opcode_ADD_DBL_DBL();
void Opcode_SUB_INT_INT();
void Opcode_SUB_INT_FLT();
void Opcode_SUB_INT_DBL();
void Opcode_SUB_FLT_INT();
void Opcode_SUB_FLT_FLT();
void Opcode_SUB_FLT_DBL();
void Opcode_SUB_DBL_INT();
void Opcode_SUB_DBL_FLT();
void Opcode_SUB_DBL_DBL();
void Opcode_MUL_INT_INT();
void Opcode_MUL_INT_FLT();
void Opcode_MUL_INT_DBL();
void Opcode_MUL_FLT_INT();
void Opcode_MUL_FLT_FLT();
void Opcode_MUL_FLT_DBL();
void Opcode_MUL_DBL_INT();
void Opcode_MUL_DBL_FLT();
void Opcode_MUL_DBL_DBL();
void Opcode_DIV_INT_INT();
void Opcode_DIV_INT_FLT();
void Opcode_DIV_INT_DBL();
void Opcode_DIV_FLT_INT();
void Opcode_DIV_FLT_FLT();
void Opcode_DIV_FLT_DBL();
void Opcode_DIV_DBL_INT();
void Opcode_DIV_DBL_FLT();
void Opcode_DIV_DBL_DBL();
void Opcode_SIN_FLT();
void Opcode_COS_FLT();
void Opcode_LOG_FLT();
void Opcode_SQRT_FLT();
void Opcode_D2R_FLT();
void Opcode_R2D_FLT();
void Opcode_RAND_INT();
void Opcode_RAND_FLT();
void Opcode_COMPARE_NOT_VEC3_VEC3();
void Opcode_COMPARE_VEC3_VEC3();
void Opcode_ADD_VEC3_VEC3();
void Opcode_SUB_VEC3_VEC3();
void Opcode_NEG_VEC3();
void Opcode_NORM_VEC3();
void Opcode_CROSS_VEC3_VEC3();
void Opcode_DOT_VEC3_VEC3();
void Opcode_MUL_FLT_VEC3();
void Opcode_MUL_VEC3_FLT();
void Opcode_MUL_DBL_VEC3();
void Opcode_MUL_VEC3_DBL();
void Opcode_DIV_VEC3_DBL();
void Opcode_DIV_VEC3_FLT();
void Opcode_ADD_VEC3_TO_VEC3();
void Opcode_SUB_VEC3_FROM_VEC3();
void Opcode_MUL_VEC3_BY_DBL();
void Opcode_DIV_VEC3_BY_DBL();
void Opcode_MUL_VEC3_BY_FLT();
void Opcode_DIV_VEC3_BY_FLT();
void Opcode_MUL_QUAT_VEC3();
void Opcode_INVERT_QUAT();
void Opcode_MUL_QUAT_QUAT();
void Opcode_CONVERT_QUAT_TO_MTX4();
void Opcode_MUL_QUAT_BY_QUAT();
void Opcode_MUL_MTX4_VEC3();
void Opcode_MUL_MTX4_MTX4();
void Opcode_INVERT_MTX4();
void Opcode_DET_MTX4();
